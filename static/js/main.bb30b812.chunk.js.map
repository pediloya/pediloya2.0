{"version":3,"sources":["Context/TeamNotificationsContext.js","Static/LogoSVG.js","StyleThemes/ThemeContext.js","Components/NavbarThemeToggle.js","Components/SideBar.js","Static/Navbar.js","Context/PedidosContext.js","Context/AllPedidosContext.js","Context/PedidosStateContext.js","Context/AllMainProvider.js","Assets/img/GoogleIcons.js","Views/Login.js","Views/NotFound.js","HOC/CustomSwitch.js","HOC/AuthRoute.js","Context/UserDataContext.js","Components/CuentaNotificaciones.js","Components/CuentaUpdateData.js","Components/CuentaUpdatePassword.js","Components/LinkGoogleAccount.js","Components/AccountData.js","Components/CuentaTimeAhead.js","Views/Admin/Cuenta.js","Context/EquipoContext.js","Components/EquipoCard.js","Components/EquipoCrearMiembro.js","Components/EquipoEditMember.js","Views/Admin/EditarEquipo.js","Components/QuantityPreview.js","Components/PedidosPreview.js","Context/DescargasContext.js","Components/DescargasCard.js","Views/Admin/Home.js","Components/PedidosListDisenioTRow.js","Components/PedidosListDisenio.js","Assets/Regex.js","Components/PedidosListWebTRows.js","Components/PedidosListWeb.js","Components/PedidoListRedesTRow.js","Components/PedidosListRedes.js","Components/PedidosListSomosTRow.js","Components/PedidosListSomos.js","Components/PedidoDetailsAutor.js","Components/PedidoDetailsDisenio.js","Components/PedidoDetailsWeb.js","Components/PedidoDetailsRedes.js","Components/PedidoDetailsSomos.js","Components/PedidosDetailsStateInfo.js","Components/PedidosDetailsState.js","Context/AsignPedidosContext.js","Components/AsignPedidos.js","Views/Admin/Pedidos.js","Components/DescargasCrear.js","Views/Admin/EditarDescargas.js","Components/CrearUsuarioForm.js","Views/Admin/CrearUsuario.js","Components/PedidoDetails.js","Views/Admin/Pedido.js","Views/Admin/PedidosCerrados.js","Views/Admin/Admin.js","Views/User/Cuenta.js","Views/User/Home.js","Views/User/Descargas.js","Components/Suggestions.js","Views/User/Equipo.js","Components/CrearPedidoType.js","Components/CrearPedidoInnerType.js","Views/User/CrearPedido.js","Views/User/Pedidos.js","Views/User/Pedido.js","Views/User/PedidosCerrados.js","Views/User/User.js","Views/Main.js","Components/Footer.js","Context/AllAppProvider.js","App.js","index.js","Context/AuthContext.js","firebase.js","Components/Loading.js","Hooks/useFirestore.js","Assets/data.js","Hooks/useInput.js","Hooks/useToggle.js","Context/CrearPedidoContext.js","Context/AutorsContext.js","Context/TimeAheadContext.js"],"names":["TeamNotificationsContext","createContext","Provider","useTeamNotificationsContext","useContext","TeamNotificationsProvider","children","useState","teamMembers","setTeamMembers","useEffect","unsub","projectFirestore","collection","where","onSnapshot","snap","empty","documents","forEach","doc","email","data","notifications","emailNotifications","member","disenio","find","noti","id","somos","redes","web","push","value","LogoSVG","width","classProp","className","version","style","viewBox","fill","d","ThemeContext","lightTheme","darkTheme","ThemeProvider","currentMode","setCurrentMode","toggle","setToggle","localStorage","getItem","theme","Object","keys","key","document","documentElement","setProperty","handleThemeToggle","newMode","setItem","NavbarThemeToggle","title","onClick","links","icon","type","path","SideBar","useAuth","userType","logout","options","setOptions","collapsed","setCollapsed","onOutsideClick","map","option","to","Navbar","currentUser","fixed","Container","fluid","Brand","as","Link","PedidosContext","usePedidos","PedidosProvider","pedidos","setPedidos","orderBy","uid","AllPedidosContext","useAllPedidos","AllPedidosProvider","PedidosStateContext","PedidosStateProvider","changeState","pedido","current","a","state","stateChangeTimestamp","timestamp","projectColection","projectDoc","update","then","catch","err","console","log","autoCloseState","AllMainProvider","GoogleIcons","xmlns","x","y","enableBackground","xmlSpace","Login","login","signupWithGoogle","history","useHistory","userName","setUserName","password","setPassword","loading","setLoading","error","setError","setUserType","storageCheck","setStorageCheck","defaultOptionValue","setDefatulOptionValue","inLocalStorage","handleSubmit","e","preventDefault","createdEmail","Card","maxWidth","margin","Header","Body","Alert","variant","Form","onSubmit","Group","Label","Control","onChange","target","required","autoComplete","height","marginLeft","removeItem","handleUserTypeChange","defaultValue","disabled","controlId","Check","checked","label","Button","NotFound","CustomSwitch","props","test","child","switchValue","AuthRoute","Component","comp","rest","render","UserDataContext","useUserData","UserDataProvider","userConfig","userDataDocs","useFirestoreCollWhere","docs","userData","setUserData","notificationsType","name","on","updateNotifLoading","setUpdateNotifLoading","successMess","setSuccessMess","updateNotifications","createAt","timer","setTimeout","clearInterval","createData","newDocument","updateData","updateDocument","CuentaNotificaciones","hasToggle","setEmailNotifications","notificationsDone","setNotificationsDone","length","isToggle","setIsToggle","Row","Col","handleUpdateEmailNotifications","notify","notifyId","elementsIndex","findIndex","element","newArray","handleEmailNotifyConfig","Loading","CuentaUpdateData","setName","surname","setSurname","setEmail","edit","setEdit","handleUpdateUserData","completeName","handleName","handleSurname","handleEmail","CuentaUpdatePassword","updatePassword","updatePasswordError","repeatedPassword","setRepeatedPassword","handleChangePassword","handlePassword","handleRepeatedPassword","LinkGoogleAccount","connectGoogleAccount","googleLinkError","setGoogleLinkError","unLinkFromGoogle","unlinkSuccess","isLinked","setIsLinked","linkedAccount","setLinkedAccount","providerData","prov","providerId","AccountData","hasLink","CuentaTimeAhead","useTimeAhead","timeAheadWeb","timeAheadRedes","timeAheaDisenio","changeTimeAhead","disenioCheck","setDisenioCheck","webCheck","setWebCheck","redesCheck","setRedesCheck","time","handleSaveTimeAhead","class","check","parseInt","disenioChangeHandler","webChangeHandler","redesChangeHandler","Cuenta","lg","EquipoContext","useEquipo","EquipoProvider","coll","useFirestoreColl","equipo","setEquipo","createMember","userId","updateMember","deleteMember","deleteDocument","EquipoCard","toggleSetter","memberSetter","funcion","nombre","href","tel","handleEdit","EquipoCrearMiembro","setFuncion","setTel","handleCreateMember","handleNameInput","handleFuncionInput","md","handleTelInput","handleEmailInput","EquipoEditMember","memberSelected","handleSubmitChangeMember","EditarEquipo","toggleEdit","setToggleEdit","setMemberSelected","xl","toggleValue","QuantityPreview","number","search","sm","PedidosPreview","pedidosRedes","setPedidosRedes","pedidosDisenio","setPedidosDisenio","pedidosWeb","setPedidosWeb","pedidosSomos","setPedidosSomos","ped","DescargasContext","useDescargas","DescargasProvider","descargas","setDescargas","progress","setProgress","uploadFile","file","storageRef","projectStorage","ref","collectionRef","put","percentage","bytesTransferred","totalBytes","getDownloadURL","url","add","res","deleteFileAndData","fileName","docRef","delete","includesQ","string","includes","DescargasCard","descarga","deleteFunction","description","rel","download","showDescarga","Home","PedidosListDisenioTRow","selectPedido","filter","toDate","toLocaleDateString","area","autor","autorName","date","specs","asignedTo","observaciones","PedidosListDisenio","pedidosOpen","currentUserId","isMoreThanOneUrl","isValidURL","URL","_","PedidosListWebTRows","changes","split","linkToContent","PedidosListWeb","PedidoListRedesTRow","text","PedidosListRedes","i","PedidosListSomosTRow","PedidosListSomos","PedidoDetailsAutor","day","hour","getHours","minutes","getMinutes","Table","bordered","responsive","hover","colSpan","autorEmail","emailsToCopy","PedidoDetailsDisenio","formatedDate","img","toString","PedidoDetailsWeb","body","webToModify","PedidoDetailsRedes","PedidoDetailsSomos","PedidosDetailsStateInfo","show","setShow","display","PedidosDetailsState","stateChange","seconds","diff","Date","getTime","Math","floor","DropdownButton","drop","Dropdown","Item","AsignPedidosContext","AsignPedidosProvider","users","setUsers","valideUsers","setValidUsers","user","asignPedido","AsignPedidos","valideUser","Pedidos","typeSelected","setTypeSelected","setPedido","setFilter","pedidosExpanded","setPedidosExpanded","location","useLocation","replace","pedidosType","handleTypes","DescargasCrear","uploadError","setFile","setDescription","setType","uploadValue","setUploadValue","allowedTypes","handleUploadDescarga","handleDescription","selected","files","size","onUploadChangeFunction","ProgressBar","now","round","EditarDescargas","CrearUsuarioForm","signup","indexOf","emailFromUserName","handleUserNameInput","handlePassInput","handleRepeatedPassInput","handleUserType","CrearUsuario","PedidoDetails","Pedido","params","useParams","p","PedidosCerrados","Admin","exact","component","Descargas","Suggestions","suggestionMessage","setSuggestionMessage","templateParams","message","emailjs","send","process","result","Equipo","CrearPedidoType","useCrearPedido","handlePedidoType","pedidoType","searchFullType","CrearPedidoInnerDisenio","lazy","CrearPedidoInnerWeb","CrearPedidoInnerRedes","CrearPedidoInnerSomos","CrearPedidoInnerType","fallback","CrearPedido","User","Main","useLayoutEffect","window","scrollTo","pathname","Footer","AllAppProvider","App","basename","ReactDOM","querySelector","AuthContext","AuthProvider","setCurrentUser","proyectAuth","signOut","onAuthStateChanged","setUnlinkSucces","setUpdatePasswordError","setUserConfig","configs","useMemo","adminConfig","admin","creatUsers","seeRequest","equipoConfig","reparticionConfig","prevType","theConfig","alert","deleteUser","createUserWithEmailAndPassword","signInWithEmailAndPassword","newPassword","code","linkWithRedirect","googleProvider","msg","signInWithRedirect","auth","googleProviderId","unlink","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","getAuth","GoogleAuthProvider","storage","firestore","FieldValue","serverTimestamp","setColl","useFirestoreDoc","setDocs","undefined","whereKey","whereValue","newDocumentCustomId","set","docId","iconType","secondStep","types","useInput","initialValue","setValue","useToggle","initial","CrearPedidoContext","CrearPedidoProvider","uploading","setUploading","setPedidoType","secondSelect","setSecondSelect","resetToggle","bindObservaciones","resetObservaciones","dayPicked","setDayPicked","dayPickedFormated","setDayPickedFormated","disenioSpecs","bindDisenioSpecs","resetDisenioSpecs","disenioText","bindDisenioText","resetDisenioText","disenioImg","bindDisenioImg","resetDisenioImg","webTitle","bindWebTitle","resetWebTitle","webDescription","bindWebDescription","resetWebDescription","webBody","bindWebBody","resetWebBody","webImg","bindWebImg","resetWebImg","webLink","bindWebLink","resetWebLink","webLinkToModify","bindLinkToModify","resetLinkToModify","webChanges","bindWebChanges","resetWebChanges","redesText","bindRedesText","resetRedesText","redesImg","bindRedesImg","resetRedesImg","somosTitle","bindSomosTitle","resetSomosTitle","somosText","bindSomosText","resetSomosText","somosImg","bindSomosImg","resetSomosImg","handleNewPedidoDisenio","newDocumentPedido","handleNewPedidoWeb","fomartedDate","handleNewPedidoRedes","handleNewPedidoSomos","setId","handleSecondSelect","handleDay","formatedDay","AutorsContext","useAutors","AutorsProviders","nameToggle","setNameToggle","emailToggle","setEmailToggle","emailCopyToggle","setEmailCopyToggle","setAutorName","setAutorEmail","setEmailsToCopy","emailsToCopyArray","setEmailsToCopyArray","autors","setAutors","handleAutorName","handleAutorEmail","resetAutorName","resetAutorEmail","resetEmailsToCopy","handleEmailsToCopy","handleEmailsToCopyArray","trimmedInput","trim","duplicate","prevState","deleteFromCopyArray","index","tag","handleNewAutor","val","deleteName","autorsName","splice","deleteEmail","autorsEmail","deleteEmailCopy","emailCopy","autorsEmailCopy","TimeAheadContext","TimeAheadProvider","setTimeAheadWeb","setTimeAheadRedes","setTimeAheaDisenio","timeaheadId","setTimeaheadId"],"mappings":"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","file":"static/js/main.bb30b812.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { projectFirestore } from '../firebase'\n\nconst TeamNotificationsContext = createContext()\n\nconst { Provider } = TeamNotificationsContext\n\nexport const useTeamNotificationsContext = () => {\n    return useContext(TeamNotificationsContext)\n}\n\nexport const TeamNotificationsProvider = ({ children }) => {\n    const [teamMembers, setTeamMembers] = useState([])\n\n    useEffect(() => {\n        const unsub = projectFirestore\n            .collection('usuarios')\n            .where('admin', '==', true)\n            .onSnapshot(snap => {\n                if (snap.empty) return setTeamMembers([{ 'empty': true }])\n                let documents = []\n                snap.forEach(doc => {\n                    let email = doc.data().email\n                    let notifications = doc.data().emailNotifications\n                    let member = {\n                        email,\n                        disenio: notifications.find(noti => noti.id === 'disenio'),\n                        somos: notifications.find(noti => noti.id === 'somos'),\n                        redes: notifications.find(noti => noti.id === 'redes'),\n                        web: notifications.find(noti => noti.id === 'web'),\n                    }\n                    documents.push({ ...member })\n                })\n                setTeamMembers(documents)\n            })\n\n        return () => unsub()\n    }, [])\n\n    const value = { teamMembers }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\n\nconst LogoSVG = ({ width, classProp }) => {\n    return (\n        <svg className={classProp} version='1.1' style={{ width: width }} viewBox='0 0 70 49'>\n            <path\n                fill='hsl(0, 0%, 30%)'\n                d='M48.9,6.5L48.9,6.5c-2.6,0-4.9,1.5-6,3.7l-9,17.4c-1-1.8-2.6-3.2-4.5-4c2.2-1.6,3.6-4.1,3.6-7 c0-3.3-1.9-6.2-4.7-7.6c-2.4-1.3-5.2-2-8.2-2H6.6c-2.8,0-5,2.2-5,5v25.1c0,2.8,2.2,5,5,5h4.9h9.7c2.8,0,5.5-0.6,7.9-1.6l0.9-0.4 c0.1,0,0.1-0.1,0.2-0.1c0.9,1.5,2.5,2.4,4.3,2.4c2,0,3.8-1.2,4.6-2.9c0.4-0.9,1.3-1.6,2.3-1.6h15.1c1,0,1.9,0.7,2.3,1.6 c0.8,1.7,2.5,2.9,4.6,2.9c2.8,0,5-2.2,5-5c0-0.9-0.2-1.7-0.6-2.5L54.9,10.2C53.8,8,51.6,6.5,48.9,6.5L48.9,6.5z'\n            />\n        </svg>\n    )\n}\n\nexport default LogoSVG\n","import React, { createContext, useContext, useEffect, useState } from 'react'\n\nconst ThemeContext = createContext()\n\nconst { Provider } = ThemeContext\n\nexport const useTheme = () => {\n    return useContext(ThemeContext)\n}\nconst lightTheme = {\n    '--black': 'hsl(0, 0%, 20%)',\n    '--white': 'hsl(0, 0%, 100%)',\n    '--grey': 'hsl(0, 0%, 85%)',\n    '--primary-clr': 'hsl(47, 96%, 67%)',\n    '--primary-clr-darken': 'hsl(47, 96%, 52%)',\n    '--secondary-clr': 'hsl(190, 80%, 49%)',\n    '--secondary-clr-darken': 'hsl(190, 80%, 39%)',\n}\n\nconst darkTheme = {\n    '--black': 'hsl(0, 0%, 85%)',\n    '--white': 'hsl(0, 0%, 25%)',\n    '--grey': 'hsl(0, 0%, 15%)',\n    '--primary-clr': 'hsl(47, 96%, 67%)',\n    '--primary-clr-darken': 'hsl(47, 96%, 52%)',\n    '--secondary-clr': 'hsl(190, 80%, 49%)',\n    '--secondary-clr-darken': 'hsl(190, 80%, 39%)',\n}\n\nexport const ThemeProvider = ({ children }) => {\n    const [currentMode, setCurrentMode] = useState('light')\n    const [toggle, setToggle] = useState(true)\n\n    const handleThemeToggle = () => {\n        const newMode = currentMode === 'light' ? 'dark' : 'light'\n        setToggle(toggle => !toggle)\n        setCurrentMode(newMode)\n        localStorage.setItem('mode', newMode)\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem('mode') === 'dark') {\n            setCurrentMode('dark')\n            setToggle(false)\n        }\n    }, [])\n\n    useEffect(() => {\n        const theme = currentMode === 'light' ? lightTheme : darkTheme\n        Object.keys(theme).forEach(key => {\n            const value = theme[key]\n            document.documentElement.style.setProperty(key, value)\n        })\n    }, [currentMode])\n\n    const value = { currentMode, toggle, handleThemeToggle }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\n\nimport { useTheme } from '../StyleThemes/ThemeContext'\n\nconst NavbarThemeToggle = () => {\n    const { toggle, handleThemeToggle } = useTheme()\n\n    return (\n        <button title={toggle ? 'Modo oscuro' : 'Modo claro'} onClick={() => handleThemeToggle()} className='toggleTheme'>\n            <span className='material-icons'>{toggle ? 'dark_mode' : 'light_mode'}</span>\n\n            <span>{toggle ? 'Modo oscuro' : 'Modo claro'}</span>\n        </button>\n    )\n}\n\nexport default NavbarThemeToggle\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../Context/AuthContext'\nimport NavbarThemeToggle from './NavbarThemeToggle'\nimport OutsideClickHandler from 'react-outside-click-handler'\n\nconst links = {\n    'admin': [\n        { id: 'home', title: 'Inicio', icon: 'home', type: 'link', path: '/' },\n        { id: 'pedidos', title: 'Ver pedidos', icon: 'pageview', type: 'link', path: '/pedidos' },\n        { id: 'pedidosCerrados', title: 'Pedidos cerrados', icon: 'do_disturb', type: 'link', path: '/pedidos-cerrados' },\n        { id: 'crearUsuario', title: 'Crear usuario', icon: 'person_add', type: 'link', path: '/crear-usuario' },\n        { id: 'editarEquipo', title: 'Editar equipo', icon: 'groups', type: 'link', path: '/editar-equipo' },\n        { id: 'editarDescargas', title: 'Editar Descargables', icon: 'file_upload', type: 'link', path: '/editar-descargables' },\n        { id: 'cuenta', title: 'Cuenta', icon: 'account_circle', type: 'link', path: '/cuenta' },\n    ],\n    'user': [\n        { id: 'home', title: 'Inicio', icon: 'home', type: 'link', path: '/' },\n        { id: 'pedidos', title: 'Ver pedidos', icon: 'pageview', type: 'link', path: '/pedidos' },\n        { id: 'pedidosCerrados', title: 'Pedidos cerrados', icon: 'do_disturb', type: 'link', path: '/pedidos-cerrados' },\n        { id: 'crearPedidos', title: 'Crear Pedidos', icon: 'note_add', type: 'link', path: '/crear-pedidos' },\n        { id: 'equipo', title: 'Equipo', icon: 'groups', type: 'link', path: '/equipo' },\n        { id: 'descargas', title: 'Descargables', icon: 'file_download', type: 'link', path: '/descargables' },\n        { id: 'cuenta', title: 'Cuenta', icon: 'account_circle', type: 'link', path: '/cuenta' },\n    ],\n}\n\nconst SideBar = () => {\n    const { userType, logout } = useAuth()\n\n    const [options, setOptions] = useState(null)\n    const [collapsed, setCollapsed] = useState(true)\n\n    useEffect(() => {\n        if (userType === 'admin') {\n            return setOptions(links.admin)\n        }\n        if (userType === 'reparticion') {\n            return setOptions(links.user)\n        }\n    }, [userType])\n\n    const handleToggleCollapse = () => {\n        setCollapsed(collapsed => !collapsed)\n    }\n\n    const clickOutside = () => {\n        setCollapsed(true)\n    }\n\n    return options ? (\n        <OutsideClickHandler\n            onOutsideClick={() => {\n                clickOutside()\n            }}\n        >\n            <div className={`sideBar ${collapsed ? 'collapsed' : ''}`}>\n                <div className='sideBarTop'>\n                    <button onClick={handleToggleCollapse} className='nav__toggle'>\n                        <span className='hamburger'></span>\n                    </button>\n                    {options.map(option => {\n                        return (\n                            <Link key={option.id} to={option.path}>\n                                <span className='material-icons'>{option.icon}</span>\n                                {option.title}\n                            </Link>\n                        )\n                    })}\n                </div>\n                <div className='sideBarBottom'>\n                    <NavbarThemeToggle />\n                    <button onClick={logout}>\n                        <span className='material-icons'>logout</span>Cerrar sesión\n                    </button>\n                </div>\n            </div>\n        </OutsideClickHandler>\n    ) : (\n        'loading'\n    )\n}\n\nexport default SideBar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar as BSNavbar, Container } from 'react-bootstrap'\nimport LogoSVG from './LogoSVG'\nimport SideBar from '../Components/SideBar'\nimport { useAuth } from '../Context/AuthContext'\n\nconst Navbar = () => {\n    const { currentUser } = useAuth()\n\n    return (\n        <BSNavbar fixed='top'>\n            <div className='yellowLine'></div>\n            <Container fluid>\n                <BSNavbar.Brand as={Link} to='/'>\n                    <LogoSVG width={'50px'} />\n                    Ministerio de Gobierno\n                </BSNavbar.Brand>\n            </Container>\n            {currentUser && <SideBar />}\n        </BSNavbar>\n    )\n}\n\nexport default Navbar\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { projectFirestore } from '../firebase'\nimport { useAuth } from './AuthContext'\n\nconst PedidosContext = createContext()\nconst { Provider } = PedidosContext\n\nexport const usePedidos = () => {\n    return useContext(PedidosContext)\n}\n\nexport const PedidosProvider = ({ children }) => {\n    const { currentUser } = useAuth()\n    const collection = 'pedidos'\n\n    const [pedidos, setPedidos] = useState([])\n    useEffect(() => {\n        if (!currentUser || !collection) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .orderBy('createAt', 'desc')\n            .where('userId', '==', currentUser.uid)\n            .onSnapshot(snap => {\n                if (snap.empty) return setPedidos([{ 'empty': true }])\n                let documents = []\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data() })\n                })\n                setPedidos(documents)\n            })\n\n        return () => unsub()\n    }, [collection, currentUser])\n\n    const value = { pedidos: pedidos }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { projectFirestore } from '../firebase'\n\nconst AllPedidosContext = createContext()\nconst { Provider } = AllPedidosContext\n\nexport const useAllPedidos = () => {\n    return useContext(AllPedidosContext)\n}\n\nexport const AllPedidosProvider = ({ children }) => {\n    const collection = 'pedidos'\n\n    const [pedidos, setPedidos] = useState([])\n    useEffect(() => {\n        if (!collection) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .orderBy('createAt', 'desc')\n            .onSnapshot(snap => {\n                if (snap.empty) return setPedidos([{ 'empty': true }])\n                let documents = []\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data() })\n                })\n                setPedidos(documents)\n            })\n\n        return () => unsub()\n    }, [collection])\n\n    const value = { pedidos: pedidos }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React, { createContext, useContext } from 'react'\nimport { projectFirestore, timestamp } from '../firebase'\n\nconst PedidosStateContext = createContext()\n\nconst { Provider } = PedidosStateContext\n\nexport const usePedidosState = () => {\n    return useContext(PedidosStateContext)\n}\n\nexport const PedidosStateProvider = ({ children }) => {\n    const changeState = async (pedido, current) => {\n        let data = {\n            ...pedido,\n            state: current === 'created' ? 'inProgress' : current === 'inProgress' ? 'finalized' : 'closed',\n            stateChangeTimestamp: timestamp(),\n        }\n        const projectColection = projectFirestore.collection('pedidos')\n        const projectDoc = projectColection.doc(pedido.id)\n\n        return projectDoc\n            .update({\n                ...data,\n            })\n            .then()\n            .catch(err => console.log(err))\n    }\n\n    const autoCloseState = async pedido => {\n        let data = {\n            ...pedido,\n            state: 'closed',\n        }\n\n        const projectColection = projectFirestore.collection('pedidos')\n        const projectDoc = projectColection.doc(pedido.id)\n\n        return projectDoc\n            .update({\n                ...data,\n            })\n            .then()\n            .catch(err => console.log(err))\n    }\n\n    const value = { changeState, autoCloseState }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\n\nimport { PedidosProvider } from './PedidosContext'\nimport { AllPedidosProvider } from './AllPedidosContext'\nimport { PedidosStateProvider } from './PedidosStateContext'\n\nconst AllMainProvider = ({ children }) => {\n    return (\n        <PedidosProvider>\n            <AllPedidosProvider>\n                <PedidosStateProvider>{children}</PedidosStateProvider>\n            </AllPedidosProvider>\n        </PedidosProvider>\n    )\n}\n\nexport default AllMainProvider\n","import React from 'react'\n\nconst GoogleIcons = () => {\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            x='0'\n            y='0'\n            enableBackground='new 0 0 512 512'\n            version='1.1'\n            viewBox='0 0 512 512'\n            xmlSpace='preserve'\n        >\n            <path\n                fill='#FBBB00'\n                d='M113.47 309.408L95.648 375.94l-65.139 1.378C11.042 341.211 0 299.9 0 256c0-42.451 10.324-82.483 28.624-117.732h.014L86.63 148.9l25.404 57.644c-5.317 15.501-8.215 32.141-8.215 49.456.002 18.792 3.406 36.797 9.651 53.408z'\n            ></path>\n            <path\n                fill='#518EF8'\n                d='M507.527 208.176C510.467 223.662 512 239.655 512 256c0 18.328-1.927 36.206-5.598 53.451-12.462 58.683-45.025 109.925-90.134 146.187l-.014-.014-73.044-3.727-10.338-64.535c29.932-17.554 53.324-45.025 65.646-77.911h-136.89V208.176h245.899z'\n            ></path>\n            <path\n                fill='#28B446'\n                d='M416.253 455.624l.014.014C372.396 490.901 316.666 512 256 512c-97.491 0-182.252-54.491-225.491-134.681l82.961-67.91c21.619 57.698 77.278 98.771 142.53 98.771 28.047 0 54.323-7.582 76.87-20.818l83.383 68.262z'\n            ></path>\n            <path\n                fill='#F14336'\n                d='M419.404 58.936l-82.933 67.896C313.136 112.246 285.552 103.82 256 103.82c-66.729 0-123.429 42.957-143.965 102.724l-83.397-68.276h-.014C71.23 56.123 157.06 0 256 0c62.115 0 119.068 22.126 163.404 58.936z'\n            ></path>\n        </svg>\n    )\n}\n\nexport default GoogleIcons\n","import React, { useState, useEffect } from 'react'\nimport { Container, Alert, Card, Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useAuth } from '../Context/AuthContext'\nimport GoogleIcon from '../Assets/img/GoogleIcons'\n\nconst Login = () => {\n    const { login, signupWithGoogle, currentUser } = useAuth()\n\n    const history = useHistory()\n\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const [userType, setUserType] = useState('@pediloya.reparticion')\n    const [storageCheck, setStorageCheck] = useState(false)\n    const [defaultOptionValue, setDefatulOptionValue] = useState('@pediloya.reparticion')\n\n    const options = [\n        { type: 'Repartición', value: '@pediloya.reparticion' },\n        { type: 'Equipo de Comunicación', value: '@pediloya.admin' },\n    ]\n\n    const handleUserTypeChange = e => {\n        setUserType(e.target.value)\n        setStorageCheck(false)\n        localStorage.removeItem('userType')\n    }\n\n    const handleToLocalStorage = () => {\n        if (!storageCheck) {\n            setStorageCheck(!storageCheck)\n            setDefatulOptionValue(userType)\n            localStorage.setItem('userType', userType)\n        } else {\n            setStorageCheck(false)\n            localStorage.removeItem('userType')\n        }\n    }\n\n    useEffect(() => {\n        const inLocalStorage = localStorage.getItem('userType')\n        console.log(defaultOptionValue)\n        if (!inLocalStorage) return\n        setUserType(inLocalStorage)\n        setDefatulOptionValue(inLocalStorage)\n        setStorageCheck(true)\n    }, [defaultOptionValue])\n\n    useEffect(() => {\n        if (!currentUser) return\n        history.push('/')\n    }, [currentUser, history])\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        try {\n            setError('')\n            setLoading(true)\n            const createdEmail = userName + userType\n            await login(createdEmail, password)\n            history.push('/')\n        } catch {\n            setError('Falló el inicio de sesión')\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Container as='main' className='login' fluid>\n            <h1 className='mb-5 text-center'>Plataforma Interna del equipo de Comunicación del Ministerio de Gobierno</h1>\n            <Card className='w-100' style={{ maxWidth: '400px', margin: '0 auto' }}>\n                <Card.Header>Ingresar</Card.Header>\n                <Card.Body>\n                    {error && <Alert variant='danger'>{error}</Alert>}\n                    <Form onSubmit={e => handleSubmit(e)}>\n                        <Form.Group className='formGroup'>\n                            <Form.Label className='d-flex'>\n                                <span className='material-icons account_circle mr-1'>account_circle</span>\n                                Usuario\n                            </Form.Label>\n                            <Form.Control\n                                type='text'\n                                onChange={e => {\n                                    setUserName(e.target.value)\n                                }}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group className='formGroup'>\n                            <Form.Label className='d-flex'>\n                                <span className='material-icons mr-1 lock'>lock</span>\n                                Contraseña\n                            </Form.Label>\n                            <Form.Control\n                                autoComplete='current-password'\n                                type='password'\n                                onChange={e => {\n                                    setPassword(e.target.value)\n                                }}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group className='formGroup'>\n                            <Form.Label className='d-flex'>\n                                <span className='material-icons mr-1 settings'>settings</span>\n                                Tipo de usuario\n                            </Form.Label>\n                            {!storageCheck ? (\n                                <Form.Control\n                                    as='select'\n                                    onChange={e => {\n                                        handleUserTypeChange(e)\n                                    }}\n                                    defaultValue={defaultOptionValue}\n                                    disabled={storageCheck}\n                                >\n                                    {!storageCheck ? (\n                                        options.map(({ value, type }) => {\n                                            return (\n                                                <option key={value} value={value}>\n                                                    {type}\n                                                </option>\n                                            )\n                                        })\n                                    ) : (\n                                        <option>\n                                            {options.map(({ value, type }) => {\n                                                return value === defaultOptionValue && type\n                                            })}\n                                            {console.log(options)}\n                                        </option>\n                                    )}\n                                </Form.Control>\n                            ) : (\n                                <p className='d-flex align-items-center' style={{ height: '38px', marginLeft: '17px' }}>\n                                    {options.map(({ value, type }) => {\n                                        return value === defaultOptionValue && type\n                                    })}\n                                </p>\n                            )}\n                        </Form.Group>\n                        <Form.Group className='formGroup' controlId='formBasicCheckbox'>\n                            <Form.Check\n                                checked={storageCheck}\n                                onChange={handleToLocalStorage}\n                                type='checkbox'\n                                label='Recordar tipo de usuario'\n                            />\n                        </Form.Group>\n                        <Form.Group className='formGroup'>\n                            <Button disabled={loading} className='w-100' type='submit' variant='primary'>\n                                Vamos!\n                            </Button>\n                        </Form.Group>\n                        <hr />\n                        <p className='mb-1'>\n                            ¡Si vinculaste tu cuenta con una cuenta de google, te podes loguear con ese método!\n                        </p>\n                        <small className='mb-3 d-block'>\n                            Para vincular tu cuenta, hacelo desde el panel de Usuario dentro de la plataforma.\n                        </small>\n                        <Button\n                            disabled={loading}\n                            className='w-100'\n                            type='button'\n                            variant='secondary'\n                            onClick={() => signupWithGoogle()}\n                        >\n                            <GoogleIcon />\n                            Usar Gmail\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nconst NotFound = () => {\n    return (\n        <Container as='main' fluid className='min-vh-100 d-flex justify-content-center align-items-center'>\n            <div className='mainIntro'>\n                <h1>Página no encontrada</h1>\n                <h4>La página que buscás no existe o fue dada de baja.</h4>\n                <h5> Revisá si la dirección que escribiste es la correcta</h5>\n            </div>\n        </Container>\n    )\n}\n\nexport default NotFound\n","const CustomSwitch = props => {\n    const { test, children } = props\n    return children.find(child => {\n        return child.props.switchValue === test\n    })\n}\n\nexport default CustomSwitch\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../Context/AuthContext'\n\nconst AuthRoute = ({ comp: Component, ...rest }) => {\n    const { currentUser } = useAuth()\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return currentUser ? <Component {...props} /> : <Redirect to='/login' />\n            }}\n        ></Route>\n    )\n}\n\nexport default AuthRoute\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { useAuth } from './AuthContext'\nimport { useFirestoreCollWhere, newDocument, updateDocument } from '../Hooks/useFirestore'\nimport { projectFirestore, timestamp } from '../firebase'\n\nconst UserDataContext = createContext()\n\nconst { Provider } = UserDataContext\n\nexport const useUserData = () => {\n    return useContext(UserDataContext)\n}\n\nexport const UserDataProvider = ({ children }) => {\n    const { currentUser, userConfig /* , userType */ } = useAuth()\n\n    const { docs: userDataDocs } = useFirestoreCollWhere('usuarios', 'userId', currentUser ? currentUser.uid : '')\n\n    const [userData, setUserData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (!currentUser) return\n        if (userDataDocs[0]) setUserData(userDataDocs)\n        if (userDataDocs[0] && loading) {\n            setLoading(false)\n        }\n    }, [currentUser, userDataDocs, loading])\n\n    const notificationsType = [\n        { name: 'Pedidos de diseño', id: 'disenio', icon: 'edit', on: true },\n        { name: 'Pedidos web GCBA', id: 'web', icon: 'computer', on: true },\n        { name: 'Pedidos de publicación en Redes', id: 'redes', icon: 'facebook', on: true },\n        { name: 'Pedido para Somos', id: 'somos', icon: 'email', on: true },\n    ]\n\n    const createData = (name, email) => {\n        newDocument(\n            'usuarios',\n            {\n                name,\n                email,\n                empty: false,\n                ...userConfig,\n                /* plataformNotifications: notificationsType, */\n                emailNotifications: notificationsType,\n            },\n            currentUser.uid\n        )\n    }\n\n    const updateData = (name, email, id) => {\n        updateDocument('usuarios', { name, email }, id)\n    }\n\n    const [updateNotifLoading, setUpdateNotifLoading] = useState(false)\n    const [successMess, setSuccessMess] = useState('')\n\n    const updateNotifications = async (type, notifications, id) => {\n        setUpdateNotifLoading(true)\n\n        const createAt = timestamp()\n\n        const projectColection = projectFirestore.collection('usuarios')\n        const projectDoc = projectColection.doc(id)\n\n        let data = { [type]: notifications }\n\n        return projectDoc\n            .update({\n                ...data,\n                createAt,\n            })\n            .then(() => {\n                setUpdateNotifLoading(false)\n                setSuccessMess('Se guardó correctamente')\n            })\n            .then(() => {\n                const timer = setTimeout(() => {\n                    setSuccessMess('')\n                }, [3000])\n                return () => clearInterval(timer)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const value = { loading, userData, createData, updateData, updateNotifications, updateNotifLoading, successMess }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Card, Form, Row, Col, Button, Alert } from 'react-bootstrap'\nimport { useUserData } from '../Context/UserDataContext'\nimport Loading from './Loading'\n\nconst CuentaNotificaciones = ({ hasToggle }) => {\n    const { loading, userData, updateNotifications, updateNotifLoading, successMess } = useUserData()\n\n    const [emailNotifications, setEmailNotifications] = useState(null)\n    const [notificationsDone, setNotificationsDone] = useState(false)\n\n    useEffect(() => {\n        if (!userData.length) return\n        if (userData[0].empty) return\n        setEmailNotifications(userData[0].emailNotifications)\n        setNotificationsDone(true)\n    }, [userData])\n\n    const handleEmailNotifyConfig = notifyId => {\n        const elementsIndex = emailNotifications.findIndex(element => element.id === notifyId)\n        let newArray = [...emailNotifications]\n        newArray[elementsIndex] = { ...newArray[elementsIndex], on: !newArray[elementsIndex].on }\n        setEmailNotifications(newArray)\n    }\n\n    const handleUpdateEmailNotifications = e => {\n        e.preventDefault()\n        updateNotifications('emailNotifications', emailNotifications, userData[0].id)\n    }\n\n    const [isToggle, setIsToggle] = useState(false)\n\n    const toggle = () => {\n        if (hasToggle) setIsToggle(isToggle => !isToggle)\n    }\n\n    return loading ? null : userData[0].empty ? null : !notificationsDone ? null : (\n        <Row>\n            <Col>\n                <Card className={hasToggle ? 'w-100 mb-3 withToggle' : 'w-100 mb-3'}>\n                    <Card.Header>\n                        <div>\n                            <span className='material-icons'>notifications</span> Notificaciones por email\n                        </div>\n                        {hasToggle && (\n                            <div onClick={() => toggle()}>\n                                <span className='material-icons'>{isToggle ? 'expand_less' : 'expand_more'}</span>\n                            </div>\n                        )}\n                    </Card.Header>\n                    <Card.Body className={isToggle ? 'show' : 'notShow'}>\n                        <Form className='notificationsConfig' onSubmit={e => handleUpdateEmailNotifications(e)}>\n                            {emailNotifications.map(notify => {\n                                return (\n                                    <Form.Group\n                                        onClick={() => handleEmailNotifyConfig(notify.id)}\n                                        key={notify.id}\n                                        className='formGroup '\n                                    >\n                                        <Form.Label>\n                                            <div className='notificationConfig'>\n                                                <span className='material-icons'>{notify.icon}</span> {notify.name}\n                                            </div>\n                                            {notify.on ? (\n                                                <span className='material-icons text-success'>toggle_on</span>\n                                            ) : (\n                                                <span className='material-icons text-danger'>toggle_off</span>\n                                            )}\n                                        </Form.Label>\n                                    </Form.Group>\n                                )\n                            })}\n                            {successMess && <Alert variant='success'>{successMess}</Alert>}\n                            {updateNotifLoading && <Loading />}\n                            <Form.Group>\n                                <Button type='submit' onClick={e => e.preventDefault}>\n                                    Guardar\n                                </Button>\n                            </Form.Group>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CuentaNotificaciones\n","import React, { useState } from 'react'\nimport { Form, Card, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { useAuth } from '../Context/AuthContext'\nimport { useUserData } from '../Context/UserDataContext'\nimport Loading from './Loading'\n\nconst CuentaUpdateData = ({ hasToggle }) => {\n    const { userType } = useAuth()\n    const { loading, userData, createData, updateData } = useUserData()\n\n    const [error, setError] = useState('')\n    const [name, setName] = useState('')\n    const [surname, setSurname] = useState('')\n    const [email, setEmail] = useState('')\n    const [edit, setEdit] = useState(false)\n\n    const handleUpdateUserData = async e => {\n        e.preventDefault()\n\n        let completeName = `${name} ${surname}`\n\n        if (!name || !email) return setError('Completá todos los campos para continuar')\n\n        if (userData[0].empty) return createData(completeName, email)\n\n        updateData(completeName, email, userData[0].id)\n        /* reset states */\n        setEdit(false)\n        setName('')\n        setSurname('')\n        setEmail('')\n    }\n\n    const handleName = e => {\n        setName(e.target.value)\n    }\n    const handleSurname = e => {\n        setSurname(e.target.value)\n    }\n    const handleEmail = e => {\n        setEmail(e.target.value)\n    }\n\n    const [isToggle, setIsToggle] = useState(false)\n\n    const toggle = () => {\n        if (hasToggle) setIsToggle(isToggle => !isToggle)\n    }\n\n    return (\n        <>\n            <Card className={hasToggle ? 'w-100 mb-3 withToggle' : 'w-100 mb-3'}>\n                <Card.Header>\n                    <div>\n                        <span className='material-icons'>manage_accounts</span>{' '}\n                        {userType === 'admin'\n                            ? 'Configurá tu usuario para recibir notificaciones por email'\n                            : 'Información adicional'}\n                    </div>\n                    {hasToggle && (\n                        <div onClick={() => toggle()}>\n                            <span className='material-icons'>{isToggle ? 'expand_less' : 'expand_more'}</span>\n                        </div>\n                    )}\n                </Card.Header>\n                <Card.Body className={isToggle ? 'show' : 'notShow'}>\n                    {loading ? (\n                        <Loading />\n                    ) : userData[0].empty || edit ? (\n                        <Form onSubmit={e => handleUpdateUserData(e)}>\n                            {error && <Alert variant='danger'>{error}</Alert>}\n                            <p>\n                                {edit\n                                    ? 'Modificá la información de tu usuario'\n                                    : 'No se encontró la información, completa el formulario para configurar tu usuario'}\n                            </p>\n                            <Row>\n                                {userType === 'admin' ? (\n                                    <>\n                                        <Form.Group as={Col} className='formGroup'>\n                                            <Form.Label>Nombre: </Form.Label>\n                                            <Form.Control value={name} onChange={e => handleName(e)} />\n                                        </Form.Group>\n                                        <Form.Group as={Col} className='formGroup'>\n                                            <Form.Label>Apellido: </Form.Label>\n                                            <Form.Control value={surname} onChange={e => handleSurname(e)} />\n                                        </Form.Group>\n                                    </>\n                                ) : (\n                                    <Form.Group as={Col} className='formGroup'>\n                                        <Form.Label>Nombre completo del área: </Form.Label>\n                                        <Form.Control value={name} onChange={e => handleName(e)} />\n                                    </Form.Group>\n                                )}\n                            </Row>\n                            <Form.Group className='formGroup'>\n                                <Form.Label>{`Email ${userType === 'reparticion' ? 'de respaldo' : ''}: `}</Form.Label>\n                                <Form.Control value={email} onChange={e => handleEmail(e)} />\n                            </Form.Group>\n                            <Form.Group className='d-flex justify-content-between'>\n                                <Button className='' type='submit'>\n                                    Enviar\n                                </Button>\n                                {edit && (\n                                    <Button variant='danger' onClick={() => setEdit(edit => !edit)}>\n                                        Cancelar\n                                    </Button>\n                                )}\n                            </Form.Group>\n                        </Form>\n                    ) : (\n                        <>\n                            <p>\n                                Nombre {userType === 'reparticion' ? 'completo del área' : ''}:{' '}\n                                <strong>{userData[0].name}</strong>\n                            </p>\n                            <p>\n                                Email: <strong>{userData[0].email}</strong>\n                            </p>\n                            <Button\n                                onClick={() => {\n                                    setEdit(true)\n                                }}\n                            >\n                                Editar\n                            </Button>\n                        </>\n                    )}\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default CuentaUpdateData\n","import React, { useState, useEffect } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from '../Context/AuthContext'\n\nconst CuentaUpdatePassword = ({ hasToggle }) => {\n    const { updatePassword, updatePasswordError } = useAuth()\n\n    const [loading, setLoading] = useState(false)\n    const [password, setPassword] = useState('')\n    const [repeatedPassword, setRepeatedPassword] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        setError('')\n    }, [])\n\n    const handleChangePassword = async e => {\n        e.preventDefault()\n        setLoading(true)\n        if (password !== repeatedPassword) return setError('Las constraseñas deben coincidir')\n        try {\n            updatePassword(password)\n            setLoading(false)\n            setError('')\n        } catch {\n            setError(updatePasswordError)\n        }\n    }\n\n    const handlePassword = e => {\n        setPassword(e.target.value)\n        setError('')\n        setLoading(false)\n    }\n    const handleRepeatedPassword = e => {\n        setRepeatedPassword(e.target.value)\n\n        setError('')\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        if (password !== repeatedPassword) return setError('Las constraseñas deben coincidir')\n        if (password === repeatedPassword) return setError('')\n        return\n    }, [repeatedPassword, password])\n\n    useEffect(() => {\n        if (updatePasswordError === 'auth/weak-password') return setError('La contraseña debe tener al menos 6 caracteres')\n        if (updatePasswordError === 'auth/requires-recent-login') return setError('Vuelve a loguearte para cambiar la contraseña')\n        return\n    }, [updatePasswordError])\n\n    const [isToggle, setIsToggle] = useState(false)\n\n    const toggle = () => {\n        if (hasToggle) setIsToggle(isToggle => !isToggle)\n    }\n\n    return (\n        <Card className={hasToggle ? 'w-100 mb-3 withToggle' : 'w-100 mb-3'}>\n            <Card.Header>\n                <div>\n                    <span className='material-icons'>lock</span> Cambiar contraseña\n                </div>\n                {hasToggle && (\n                    <div onClick={() => toggle()}>\n                        <span className='material-icons'>{isToggle ? 'expand_less' : 'expand_more'}</span>\n                    </div>\n                )}\n            </Card.Header>\n            <Card.Body className={isToggle ? 'show' : 'notShow'}>\n                {error && <Alert variant='danger'>{error}</Alert>}\n                <Form onSubmit={e => handleChangePassword(e)}>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Nueva contraseña</Form.Label>\n                        <Form.Control\n                            autoComplete='new-password'\n                            type='password'\n                            value={password}\n                            onChange={e => handlePassword(e)}\n                        />\n                    </Form.Group>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Repite la contraseña</Form.Label>\n                        <Form.Control\n                            autoComplete='new-password'\n                            type='password'\n                            value={repeatedPassword}\n                            onChange={e => handleRepeatedPassword(e)}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Button disabled={loading || password !== repeatedPassword} type='submit' variant='primary'>\n                            Cambiar\n                        </Button>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CuentaUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { Button, Alert } from 'react-bootstrap'\nimport GoogleIcon from '../Assets/img/GoogleIcons'\n\nconst LinkGoogleAccount = () => {\n    const { currentUser, connectGoogleAccount, googleLinkError, setGoogleLinkError, unLinkFromGoogle, unlinkSuccess } = useAuth()\n\n    const [isLinked, setIsLinked] = useState(false)\n    const [linkedAccount, setLinkedAccount] = useState('')\n\n    useEffect(() => {\n        if (!currentUser) return\n\n        currentUser.providerData.forEach(prov => {\n            if (!prov.providerId === 'google.com') return\n            if (prov.providerId === 'google.com') {\n                setLinkedAccount(prov.email)\n                return setIsLinked(true)\n            }\n        })\n\n        return () => {\n            setIsLinked(false)\n            setLinkedAccount('')\n        }\n    }, [currentUser, unlinkSuccess])\n\n    useEffect(() => {\n        setGoogleLinkError('')\n    }, [])\n\n    return (\n        <div className='linkButtonWrapper'>\n            <hr />\n            {!isLinked ? (\n                <>\n                    <p>Vinculá tu cuenta con gmail para acceder a la plataforma más rápido</p>\n                    <div className='isNotLinked'>\n                        {googleLinkError && <Alert variant='danger'>{googleLinkError}</Alert>}\n                        <Button\n                            variant='secondary'\n                            onClick={() => {\n                                connectGoogleAccount()\n                            }}\n                        >\n                            <GoogleIcon />\n                            Gmail\n                        </Button>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <p className='mb-1'>\n                        Ya hay un cuenta vinculada: <strong>{linkedAccount}</strong>\n                    </p>\n                    <p className='mb-1'>Desvincular:</p>\n                    <Button\n                        variant='outline-danger'\n                        onClick={() => {\n                            unLinkFromGoogle()\n                        }}\n                    >\n                        <GoogleIcon />\n                        Gmail\n                    </Button>\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default LinkGoogleAccount\n","import React, { useState } from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { Link } from 'react-router-dom'\nimport { Card, Button } from 'react-bootstrap'\nimport LinkGoogleAccount from './LinkGoogleAccount'\n\nconst AccountData = ({ hasLink, hasToggle }) => {\n    const { userName, userType } = useAuth()\n\n    const [isToggle, setIsToggle] = useState(false)\n\n    const toggle = () => {\n        if (hasToggle) setIsToggle(isToggle => !isToggle)\n    }\n\n    return (\n        <Card className={hasToggle ? 'w-100 mb-3 withToggle' : 'w-100 mb-3'}>\n            <Card.Header>\n                <div>\n                    <span className='material-icons'>account_circle</span> Datos de la cuenta\n                </div>\n                {hasToggle && (\n                    <div onClick={() => toggle()}>\n                        <span className='material-icons'>{isToggle ? 'expand_less' : 'expand_more'}</span>\n                    </div>\n                )}\n            </Card.Header>\n            <Card.Body className={isToggle ? 'show' : 'notShow'}>\n                <p>\n                    Nombre de usuario: <strong>{userName}</strong>\n                </p>\n                <p>\n                    Tipo de usuario <strong>{userType === 'reparticion' ? 'Repartición' : 'Equipo de Comunicación'}</strong>\n                </p>\n                {hasLink && (\n                    <Button as={Link} to='/cuenta'>\n                        Ver perfil\n                    </Button>\n                )}\n                {!hasLink && <LinkGoogleAccount />}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default AccountData\n","import React, { useState, useEffect } from 'react'\nimport { useTimeAhead } from '../Context/TimeAheadContext'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport Loading from './Loading'\n\nconst CuentaTimeAhead = ({ hasToggle }) => {\n    const { timeAheadWeb, timeAheadRedes, timeAheaDisenio, changeTimeAhead, loading, successMess } = useTimeAhead()\n\n    const [disenioCheck, setDisenioCheck] = useState(0)\n    const [webCheck, setWebCheck] = useState(0)\n    const [redesCheck, setRedesCheck] = useState(0)\n\n    const [error, setError] = useState('')\n\n    let checkListDisenio = [\n        { id: 'disenio-0', class: 'disenio', name: 'Diseño', value: 0 },\n        { id: 'disenio-5', class: 'disenio', name: 'Diseño', value: 5 },\n        { id: 'disenio-10', class: 'disenio', name: 'Diseño', value: 10 },\n        { id: 'disenio-15', class: 'disenio', name: 'Diseño', value: 15 },\n    ]\n    let checkListWeb = [\n        { id: 'web-0', class: 'web', name: 'Web', value: 0 },\n        { id: 'web-5', class: 'web', name: 'Web', value: 5 },\n        { id: 'web-10', class: 'web', name: 'Web', value: 10 },\n        { id: 'web-15', class: 'web', name: 'Web', value: 15 },\n    ]\n    let checkListRedes = [\n        { id: 'redes-0', class: 'redes', name: 'Redes', value: 0 },\n        { id: 'redes-5', class: 'redes', name: 'Redes', value: 5 },\n        { id: 'redes-10', class: 'redes', name: 'Redes', value: 10 },\n        { id: 'redes-15', class: 'redes', name: 'Redes', value: 15 },\n    ]\n\n    useEffect(() => {\n        /* console.log('timeAheaDisenio => ', timeAheaDisenio) */\n        if (!timeAheaDisenio.time) return\n        setDisenioCheck(timeAheaDisenio.time)\n    }, [timeAheaDisenio])\n\n    useEffect(() => {\n        /* console.log('timeAheadWeb => ', timeAheadWeb) */\n        if (!timeAheadWeb.time) return\n        setWebCheck(timeAheadWeb.time)\n    }, [timeAheadWeb])\n\n    useEffect(() => {\n        /* console.log(' timeAheadRedes => ', timeAheadRedes) */\n        if (!timeAheadRedes.time) return\n        setRedesCheck(timeAheadRedes.time)\n    }, [timeAheadRedes])\n\n    const disenioChangeHandler = e => {\n        setError('')\n        setDisenioCheck(parseInt(e.target.value))\n    }\n    const webChangeHandler = e => {\n        setError('')\n        setWebCheck(parseInt(e.target.value))\n    }\n    const redesChangeHandler = e => {\n        setError('')\n        setRedesCheck(parseInt(e.target.value))\n    }\n    const handleSaveTimeAhead = e => {\n        e.preventDefault()\n        if (timeAheadWeb.time === webCheck && timeAheadRedes.time === redesCheck && timeAheaDisenio.time === disenioCheck)\n            return setError('No realizaste ningún cambio, primero cambiá el lapso de algún tipo de pedido para guardar el cambio')\n        let data = {\n            disenio: { time: disenioCheck },\n            web: { time: webCheck },\n            redes: { time: redesCheck },\n        }\n        changeTimeAhead(data)\n    }\n\n    const [isToggle, setIsToggle] = useState(false)\n\n    const toggle = () => {\n        if (hasToggle) setIsToggle(isToggle => !isToggle)\n    }\n\n    return (\n        <Card className={hasToggle ? 'w-100 mb-3 withToggle timeAhead' : 'w-100 mb-3 timeAhead'}>\n            <Card.Header>\n                <div>\n                    <span className='material-icons'>hourglass_full</span>Controlá el lapso de tiempo para cada tipo de pedido\n                </div>\n                {console.log(hasToggle)}\n                {hasToggle && (\n                    <div onClick={() => toggle()}>\n                        <span className='material-icons'>{isToggle ? 'expand_less' : 'expand_more'}</span>\n                    </div>\n                )}\n            </Card.Header>\n            <Card.Body className={isToggle ? 'show' : 'notShow'}>\n                <div className='timeAheadHeadRow'>\n                    <p>Tipo de pedido</p>\n                    <p>0 días</p>\n                    <p>5 días</p>\n                    <p>10 días</p>\n                    <p>15 días</p>\n                </div>\n                <Form onSubmit={e => handleSaveTimeAhead(e)}>\n                    <Form.Group>\n                        <Form.Label>Diseño</Form.Label>\n                        {checkListDisenio.map(check => {\n                            return (\n                                <Form.Check\n                                    type='radio'\n                                    key={check.id}\n                                    name={check.class}\n                                    className={check.id}\n                                    value={check.value}\n                                    onChange={e => disenioChangeHandler(e)}\n                                    checked={check.value === disenioCheck}\n                                />\n                            )\n                        })}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Web</Form.Label>\n                        {checkListWeb.map(check => {\n                            return (\n                                <Form.Check\n                                    type='radio'\n                                    key={check.id}\n                                    name={check.class}\n                                    className={check.id}\n                                    value={check.value}\n                                    onChange={e => webChangeHandler(e)}\n                                    checked={check.value === webCheck}\n                                />\n                            )\n                        })}\n                    </Form.Group>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Redes</Form.Label>\n                        {checkListRedes.map(check => {\n                            return (\n                                <Form.Check\n                                    type='radio'\n                                    key={check.id}\n                                    name={check.class}\n                                    className={check.id}\n                                    value={check.value}\n                                    onChange={e => redesChangeHandler(e)}\n                                    checked={check.value === redesCheck}\n                                />\n                            )\n                        })}\n                    </Form.Group>\n                    {loading && <Loading />}\n                    {successMess && <Alert variant='success'>{successMess}</Alert>}\n                    {error && <Alert variant='danger'>{error}</Alert>}\n                    <Button type='submit'>Guardar</Button>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CuentaTimeAhead\n","import React from 'react'\n/* import { useAuth } from '../../Context/AuthContext' */\nimport { Container /* , Card */, Row, Col } from 'react-bootstrap'\n\nimport CuentaNotificaciones from '../../Components/CuentaNotificaciones'\nimport CuentaUpdateData from '../../Components/CuentaUpdateData'\nimport CuentaUpdatePassword from '../../Components/CuentaUpdatePassword'\nimport AccountData from '../../Components/AccountData'\nimport CuentaTimeAhead from '../../Components/CuentaTimeAhead'\n\nconst Cuenta = () => {\n    return (\n        <Container fluid as='main' className='cuenta'>\n            <div className='mainIntro'>\n                <h1>Cuenta</h1>\n                <h4>Configurá tu usuario</h4>\n            </div>\n            <Row>\n                <Col lg={5}>\n                    <AccountData hasLink={false} />\n                    <CuentaUpdatePassword />\n                </Col>\n                <Col lg={7}>\n                    <CuentaUpdateData />\n                    <CuentaNotificaciones />\n                    <CuentaTimeAhead />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cuenta\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { useFirestoreColl, newDocument, updateDocument, deleteDocument } from '../Hooks/useFirestore'\n\nconst EquipoContext = createContext()\n\nconst { Provider } = EquipoContext\n\nexport const useEquipo = () => {\n    return useContext(EquipoContext)\n}\n\nexport const EquipoProvider = ({ children }) => {\n    const { coll } = useFirestoreColl('equipo')\n\n    const [equipo, setEquipo] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (coll) setEquipo(coll)\n        if (coll && loading) {\n            setLoading(false)\n        }\n    }, [coll, loading])\n\n    const createMember = (data, userId) => {\n        newDocument('equipo', data, userId)\n    }\n\n    const updateMember = (data, id) => {\n        updateDocument('equipo', data, id)\n    }\n\n    const deleteMember = id => {\n        deleteDocument('equipo', id)\n    }\n\n    const value = { equipo: equipo, createMember: createMember, updateMember, deleteMember }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { useEquipo } from '../Context/EquipoContext'\nimport { useAuth } from '../Context/AuthContext'\nimport Loading from './Loading'\n\nconst EquipoCard = ({ toggleSetter, memberSetter }) => {\n    const { userType } = useAuth()\n    const { equipo, deleteMember } = useEquipo()\n\n    const handleEdit = member => {\n        toggleSetter(true)\n        memberSetter(member)\n    }\n\n    const handleDeleteMember = id => {\n        deleteMember(id)\n    }\n\n    return (\n        <Card className='mb-3'>\n            <Card.Header>\n                <span className='material-icons'>groups</span> Equipo de Comunicación del Ministerio de Gobierno\n            </Card.Header>\n            <Card.Body className='membsersCard'>\n                {!equipo.length ? (\n                    <Loading />\n                ) : equipo[0].empty ? (\n                    userType === 'admin' ? (\n                        'No hay nadie cargado, empeza por cargar tus datos o los de un colega'\n                    ) : (\n                        'No hay miembros del equipo cargados'\n                    )\n                ) : (\n                    <div className='members row'>\n                        {equipo.map(member => {\n                            return (\n                                <div key={member.id} className='mb-3 col-md-4'>\n                                    <div className='member'>\n                                        <strong>{member.funcion}</strong>\n                                        <p>\n                                            <span className='material-icons bg'>person</span>\n                                        </p>\n                                        <p>{member.nombre}</p>\n                                        <p className='hasIcon'>\n                                            <span className='material-icons'>email</span> <span>Correo electrónico:</span>\n                                            <a href={`mailto:${member.email}`}>{member.email}</a>\n                                        </p>\n                                        <p className='hasIcon'>\n                                            <span className='material-icons'>call</span> <span>Tel:</span>\n                                            <a href={`tel:${member.tel}`}>{member.tel}</a>\n                                        </p>\n                                        {userType === 'admin' && (\n                                            <>\n                                                <hr />\n                                                <div className='memberButtons d-flex justify-content-between'>\n                                                    <Button onClick={() => handleEdit(member)} variant='primary'>\n                                                        Editar\n                                                    </Button>\n                                                    <Button\n                                                        onClick={() => handleDeleteMember(member.id)}\n                                                        variant='outline-danger'\n                                                    >\n                                                        Eliminar\n                                                    </Button>\n                                                </div>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default EquipoCard\n","import React, { useState } from 'react'\nimport { Card, Form, Col, Row, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from '../Context/AuthContext'\nimport { useEquipo } from '../Context/EquipoContext'\n\nconst EquipoCrearMiembro = () => {\n    const { currentUser } = useAuth()\n    const { createMember } = useEquipo()\n\n    const [error, setError] = useState('')\n    const [name, setName] = useState('')\n    const [funcion, setFuncion] = useState('')\n    const [tel, setTel] = useState('')\n    const [email, setEmail] = useState('')\n\n    const handleNameInput = e => {\n        setName(e.target.value)\n        setError('')\n    }\n\n    const handleFuncionInput = e => {\n        setFuncion(e.target.value)\n        setError('')\n    }\n    const handleTelInput = e => {\n        setTel(e.target.value)\n        setError('')\n    }\n    const handleEmailInput = e => {\n        setEmail(e.target.value)\n        setError('')\n    }\n\n    const handleCreateMember = e => {\n        e.preventDefault()\n        if (!name || !funcion || !tel || !email) return setError('Completá todos los datos del formulario')\n        let data = {\n            nombre: name,\n            funcion,\n            tel,\n            email,\n            userId: currentUser.uid,\n        }\n        createMember(data, currentUser.uid)\n        setName('')\n        setFuncion('')\n        setTel('')\n        setEmail('')\n    }\n\n    return (\n        <Card>\n            <Card.Header>\n                <span className='material-icons'>group_add</span> Creá un nuevo miembro del equipo\n            </Card.Header>\n            <Card.Body>\n                {error && <Alert variant='danger'>{error}</Alert>}\n                <Form onSubmit={e => handleCreateMember(e)}>\n                    <Row>\n                        <Form.Group className='formGroup' as={Col}>\n                            <Form.Label>Nombre y apellido</Form.Label>\n                            <Form.Control type='text' onChange={e => handleNameInput(e)} value={name} />\n                        </Form.Group>\n                        <Form.Group className='formGroup'>\n                            <Form.Label>Función</Form.Label>\n                            <Form.Control type='text' value={funcion} onChange={e => handleFuncionInput(e)} />\n                        </Form.Group>\n                        <Form.Group className='formGroup' as={Col} md={6}>\n                            <Form.Label>Teléfono</Form.Label>\n                            <Form.Control type='text' value={tel} onChange={e => handleTelInput(e)} />\n                        </Form.Group>\n                        <Form.Group className='formGroup' as={Col} md={6}>\n                            <Form.Label>Correo Electrónico</Form.Label>\n                            <Form.Control type='email' value={email} onChange={e => handleEmailInput(e)} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button type='submit'>Crear</Button>\n                        </Form.Group>\n                    </Row>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default EquipoCrearMiembro\n","import React, { useState, useEffect } from 'react'\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\nimport { useEquipo } from '../Context/EquipoContext'\n\nconst EquipoEditMember = ({ memberSelected, toggleSetter }) => {\n    const { updateMember } = useEquipo()\n\n    const [name, setName] = useState('')\n    const [funcion, setFuncion] = useState('')\n    const [tel, setTel] = useState('')\n    const [email, setEmail] = useState('')\n\n    const handleNameInput = e => {\n        setName(e.target.value)\n    }\n    const handleFuncionInput = e => {\n        setFuncion(e.target.value)\n    }\n    const handleTelInput = e => {\n        setTel(e.target.value)\n    }\n    const handleEmailInput = e => {\n        setEmail(e.target.value)\n    }\n\n    useEffect(() => {\n        setName(memberSelected.nombre)\n        setFuncion(memberSelected.funcion)\n        setTel(memberSelected.tel)\n        setEmail(memberSelected.email)\n    }, [memberSelected])\n\n    const handleSubmitChangeMember = e => {\n        e.preventDefault()\n        let data = {\n            nombre: name,\n            funcion,\n            tel,\n            email,\n        }\n        updateMember(data, memberSelected.id)\n        toggleSetter(false)\n    }\n\n    return (\n        <Card className='mb-3'>\n            <Card.Header>\n                <span className='material-icons'>manage_accounts</span>Edita la información\n            </Card.Header>\n            <Card.Body>\n                <Form>\n                    <Row>\n                        <Form.Group as={Col} className='formGroup'>\n                            <Form.Label>Nombre</Form.Label>\n                            <Form.Control value={name} onChange={e => handleNameInput(e)} />\n                        </Form.Group>\n                        <Form.Group className='formGroup'>\n                            <Form.Label>Función</Form.Label>\n                            <Form.Control value={funcion} onChange={e => handleFuncionInput(e)} />\n                        </Form.Group>\n                        <Form.Group as={Col} className='formGroup'>\n                            <Form.Label>Teléfono</Form.Label>\n                            <Form.Control value={tel} onChange={e => handleTelInput(e)} />\n                        </Form.Group>\n                        <Form.Group as={Col} className='formGroup'>\n                            <Form.Label>Correo electrónico</Form.Label>\n                            <Form.Control value={email} onChange={e => handleEmailInput(e)} />\n                        </Form.Group>\n                        <Form.Group className='d-flex justify-content-between'>\n                            <Button type='submit' onClick={e => handleSubmitChangeMember(e)} variant='primary'>\n                                Guardar\n                            </Button>\n                            <Button type='button' onClick={() => toggleSetter(false)} variant='outline-danger'>\n                                Cancelar\n                            </Button>\n                        </Form.Group>\n                    </Row>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default EquipoEditMember\n","import React, { useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport EquipoCard from '../../Components/EquipoCard'\nimport EquipoCrearMiembro from '../../Components/EquipoCrearMiembro'\nimport EquipoEditMember from '../../Components/EquipoEditMember'\n\nconst EditarEquipo = () => {\n    const [toggleEdit, setToggleEdit] = useState(false)\n    const [memberSelected, setMemberSelected] = useState(null)\n\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Editar Equipo</h1>\n                <p>Creá o edita la información de contacto del equipo de Comunicación del Ministerio</p>\n                <h4>Esta información será visible dentro de la plataforma para todos los usuarios</h4>\n            </div>\n            <Row>\n                <Col xl={8}>\n                    <EquipoCard toggleValue={toggleEdit} toggleSetter={setToggleEdit} memberSetter={setMemberSelected} />\n                </Col>\n                <Col xl={4}>\n                    {toggleEdit ? (\n                        <EquipoEditMember toggleSetter={setToggleEdit} memberSelected={memberSelected} />\n                    ) : (\n                        <EquipoCrearMiembro />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EditarEquipo\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { Link } from 'react-router-dom'\nimport { Col } from 'react-bootstrap'\n\nconst QuantityPreview = ({ type, icon, number, search }) => {\n    const { userType } = useAuth()\n\n    return (\n        <Col md={3} sm={6}>\n            <p>\n                <span className='material-icons'>{icon}</span> {type}\n            </p>\n            <p>\n                {userType === 'reparticion' && (\n                    <Link to={`/crear-pedidos?${search}`}>\n                        <span className='material-icons'>note_add</span>\n                    </Link>\n                )}\n                <Link to={`/pedidos?${search}`}>\n                    <span className='material-icons'>pageview</span>\n                </Link>\n            </p>\n            <p>Pedidos: {number}</p>\n        </Col>\n    )\n}\n\nexport default QuantityPreview\n","import React, { useEffect, useState } from 'react'\nimport { Row } from 'react-bootstrap'\nimport QuantityPreview from './QuantityPreview'\nimport Loading from './Loading'\n\nconst PedidosPreview = ({ pedidos }) => {\n    const [pedidosRedes, setPedidosRedes] = useState([])\n    const [pedidosDisenio, setPedidosDisenio] = useState([])\n    const [pedidosWeb, setPedidosWeb] = useState([])\n    const [pedidosSomos, setPedidosSomos] = useState([])\n\n    useEffect(() => {\n        if (pedidos.length === 0) return\n        if (pedidos[0].empty) return\n        pedidos.forEach(pedido => {\n            if (!pedido.id) return\n            if (pedido.pedido === 'redes' && pedido.state !== 'closed') {\n                if (pedidosRedes.find(ped => ped.id === pedido.id)) return\n                setPedidosRedes(pedidosRedes => [...pedidosRedes, pedido])\n            }\n            if (pedido.pedido === 'disenio' && pedido.state !== 'closed') {\n                if (pedidosDisenio.find(ped => ped.id === pedido.id)) return\n                setPedidosDisenio(pedidosDisenio => [...pedidosDisenio, pedido])\n            }\n            if (pedido.pedido === 'web' && pedido.state !== 'closed') {\n                if (pedidosWeb.find(ped => ped.id === pedido.id)) return\n                setPedidosWeb(pedidosWeb => [...pedidosWeb, pedido])\n            }\n            if (pedido.pedido === 'somos' && pedido.state !== 'closed') {\n                if (pedidosSomos.find(ped => ped.id === pedido.id)) return\n                setPedidosSomos(pedidosSomos => [...pedidosSomos, pedido])\n            }\n        })\n    }, [pedidos])\n\n    return (\n        <>\n            <Row className='homeQuantity'>\n                <QuantityPreview type={'Diseño'} icon={'edit'} number={pedidosDisenio.length} search='disenio' />\n                <QuantityPreview type={'Web'} icon={'computer'} number={pedidosWeb.length} search='web' />\n                <QuantityPreview type={'Redes'} icon={'facebook'} number={pedidosRedes.length} search='redes' />\n                <QuantityPreview type={'Somos'} icon={'email'} number={pedidosSomos.length} search='somos' />\n            </Row>\n        </>\n    )\n}\n\nexport default PedidosPreview\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { useFirestoreColl } from '../Hooks/useFirestore'\n\nimport { projectStorage, projectFirestore, timestamp } from '../firebase'\n\nconst DescargasContext = createContext()\n\nconst { Provider } = DescargasContext\n\nexport const useDescargas = () => {\n    return useContext(DescargasContext)\n}\n\nexport const DescargasProvider = ({ children }) => {\n    const { coll } = useFirestoreColl('descargas')\n    const [descargas, setDescargas] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (coll) setDescargas(coll)\n        if (coll && loading) {\n            setLoading(false)\n        }\n    }, [coll, loading])\n\n    const [progress, setProgress] = useState(0)\n    const [error, setError] = useState('')\n\n    const uploadFile = (file, data, collection) => {\n        const storageRef = projectStorage.ref(`descargas/${file.name}`)\n        const collectionRef = projectFirestore.collection(collection)\n\n        storageRef.put(file).on(\n            'state_changed',\n            snap => {\n                let percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n                setProgress(percentage)\n            },\n            err => {\n                setError(err)\n            },\n            async () => {\n                const url = await storageRef.getDownloadURL()\n                const createAt = timestamp()\n                collectionRef\n                    .add({\n                        url,\n                        createAt,\n                        ...data,\n                    })\n                    .then(res => {\n                        collectionRef.doc(res.id).update({\n                            id: res.id,\n                        })\n                    })\n                    .catch(err => console.log(err))\n                setProgress(0)\n            }\n        )\n    }\n\n    const deleteFileAndData = data => {\n        const storageRef = projectStorage.ref(`descargas/${data.fileName}`)\n        const collectionRef = projectFirestore.collection('descargas')\n        const docRef = collectionRef.doc(data.id)\n\n        storageRef\n            .delete()\n            .then(res => {\n                console.log(res)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        return docRef\n            .delete()\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    const value = { descargas, uploadFile, progress, error, deleteFileAndData }\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\nimport { useDescargas } from '../Context/DescargasContext'\nimport { useAuth } from '../Context/AuthContext'\nimport { Link } from 'react-router-dom'\nimport { Card, Button } from 'react-bootstrap'\nimport Loading from './Loading'\n\nconst includesQ = (string, test) => {\n    return string.includes(test)\n}\n\nconst showDescarga = (descarga, userType, deleteFunction) => {\n    return (\n        <div key={descarga.id} className='col-lg-2'>\n            <div key={descarga.url} className='descarga'>\n                <span className='material-icons big'>\n                    {includesQ(descarga.type, 'pdf') || includesQ(descarga.type, 'postscript')\n                        ? 'picture_as_pdf'\n                        : includesQ(descarga.type, 'png') ||\n                          includesQ(descarga.type, 'jpg') ||\n                          includesQ(descarga.type, 'jpeg') ||\n                          includesQ(descarga.type, 'svg')\n                        ? 'image'\n                        : includesQ(descarga.type, 'powerpoint') || includesQ(descarga.type, 'presentation')\n                        ? 'slideshow'\n                        : includesQ(descarga.type, 'msword') || includesQ(descarga.type, 'document')\n                        ? 'description'\n                        : includesQ(descarga.type, 'compressed') ||\n                          includesQ(descarga.type, 'zip') ||\n                          includesQ(descarga.type, 'rar') ||\n                          includesQ(descarga.type, 'tar')\n                        ? 'folder'\n                        : 'file_download'}\n                </span>\n                <div className='descargaInfo'>\n                    <p>{descarga.name}</p>\n                    <p>{descarga.description}</p>\n                </div>\n                <div className='d-flex justify-content-between buttons w-100'>\n                    <a className='btn btn-primary' href={descarga.url} rel='noreferrer' target='_blank' download={true}>\n                        {userType !== 'admin' && ' Descargar'} <span className='material-icons'>download</span>\n                    </a>\n                    {userType === 'admin' && (\n                        <Button variant='outline-danger'>\n                            <span className='material-icons' onClick={() => deleteFunction(descarga)}>\n                                delete\n                            </span>\n                        </Button>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst DescargasCard = ({ hasLink }) => {\n    const { descargas, deleteFileAndData } = useDescargas()\n    const { userType } = useAuth()\n\n    return (\n        <Card>\n            <Card.Header>\n                <span className='material-icons'>file_download</span> Descargas\n            </Card.Header>\n            <Card.Body>\n                <div className='descargas'>\n                    {!descargas.length ? (\n                        <Loading />\n                    ) : descargas[0].empty ? (\n                        'No hay descargas cargadas'\n                    ) : (\n                        <div className='row'>\n                            {descargas.map(descarga => showDescarga(descarga, userType, deleteFileAndData))}\n                        </div>\n                    )}\n                </div>\n                {hasLink && (\n                    <Button className='mt-3' as={Link} to={userType === 'reparticion' ? '/descargables' : '/editar-descargables'}>\n                        Ir a descargas\n                    </Button>\n                )}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default DescargasCard\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAllPedidos } from '../../Context/AllPedidosContext'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport PedidosPreview from '../../Components/PedidosPreview'\nimport AccountData from '../../Components/AccountData'\nimport DescargasCard from '../../Components/DescargasCard'\nimport CuentaNotificaciones from '../../Components/CuentaNotificaciones'\nimport CuentaUpdateData from '../../Components/CuentaUpdateData'\nimport CuentaTimeAhead from '../../Components/CuentaTimeAhead'\nimport CuentaUpdatePassword from '../../Components/CuentaUpdatePassword'\n\nconst Home = () => {\n    const { pedidos } = useAllPedidos()\n\n    return (\n        <Container as='main' fluid className='home'>\n            <div className='mainIntro'>\n                <h1>Bienvenido a Pedilo YA 2.0</h1>\n                <h4>Monitoreá los pedidos de todas las áreas en tiempo real</h4>\n            </div>\n            <PedidosPreview pedidos={pedidos} />\n            <div className='homeQuote'>\n                <hr />\n                <h5>¡Estamos mejorando la dinamica de nuestra comunicación!</h5>\n                <p>\n                    A través de esta plataforma pedí diseños, publicaciones en redes, noticias web y hacenos llegar tus novedades\n                    para Somos.\n                </p>\n                <p>\n                    <Link to='/editar-descargables'>Cargá</Link> los manuales de marca y contenidos web de GCBA.\n                </p>\n                <p>\n                    Edita la información del <Link to='/editar-equipo'>Equipo de Comunicación</Link> del Ministerio.{' '}\n                </p>\n                <hr />\n            </div>\n            <Row>\n                <Col md={12}>\n                    <h3 className='mb-4'>Accesos rápidos</h3>\n                </Col>\n                <Col lg={6} xl={4}>\n                    <AccountData hasLink={true} />\n                    <CuentaUpdatePassword hasToggle={true} />\n                </Col>\n                <Col lg={6} xl={4}>\n                    <CuentaUpdateData hasToggle={true} />\n                </Col>\n                <Col lg={12} xl={4}>\n                    <CuentaNotificaciones hasToggle={true} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\n\nconst PedidosListDisenioTRow = ({ pedido, selectPedido, filter }) => {\n    const { userType, currentUser } = useAuth()\n    return (\n        <tr onClick={() => selectPedido(pedido)}>\n            <td>{pedido.createAt.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'admin' ? <td className='toUppercase'>{pedido.area}</td> : <td>{pedido.autor.autorName}</td>}\n            <td>{pedido.date.toDate().toLocaleDateString('en-GB')}</td>\n            <td className='text-nowrap'>\n                {pedido.type === 'digital' ? 'Pieza Digital' : pedido.type === 'impresa' ? 'Pieza Impresa' : 'Ambas'}\n            </td>\n            <td>{pedido.specs}</td>\n            {userType === 'admin' ? <td>{pedido.asignedTo?.userName}</td> : <td>{pedido.observaciones}</td>}\n            {userType === 'admin' && (\n                <td\n                    className={\n                        pedido.state === 'created'\n                            ? 'created'\n                            : pedido.state === 'inProgress'\n                            ? 'inProgress'\n                            : pedido.state === 'finalized'\n                            ? 'finalized'\n                            : pedido.state === 'closed' && 'closed'\n                    }\n                >\n                    {pedido.state === 'created'\n                        ? 'Creado'\n                        : pedido.state === 'inProgress'\n                        ? 'En curso'\n                        : pedido.state === 'finalized'\n                        ? 'Finalizado'\n                        : pedido.state === 'closed' && 'Cerrado'}\n                </td>\n            )}\n        </tr>\n    )\n}\n\nexport default PedidosListDisenioTRow\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport PedidosListDisenioTRow from './PedidosListDisenioTRow'\n\nconst PedidosListDisenio = ({ pedidos, selectPedido, filter, pedidosOpen }) => {\n    const { userType, currentUser } = useAuth()\n\n    return (\n        <>\n            <thead>\n                <tr className='text-nowrap'>\n                    <th>Realizado</th>\n                    {userType === 'admin' ? <th>Área</th> : <th>Autor</th>}\n                    <th>Fecha de entrega</th>\n                    <th>Tipo de pedido</th>\n                    <th>Especificaciones</th>\n                    {userType === 'admin' ? <th>Asignado a</th> : <th>Observaciones</th>}\n                    {userType === 'admin' ? <th>Estado</th> : null}\n                </tr>\n            </thead>\n            <tbody>\n                {pedidos.map(pedido => {\n                    if (pedido.pedido !== 'disenio') return\n                    if (pedidosOpen) {\n                        if (pedido.state === 'closed') return\n                        if (filter) {\n                            if (currentUser.uid === pedido.asignedTo?.currentUserId)\n                                return (\n                                    <PedidosListDisenioTRow\n                                        key={pedido.id}\n                                        pedido={pedido}\n                                        filter={filter}\n                                        selectPedido={selectPedido}\n                                    />\n                                )\n                        } else {\n                            return (\n                                <PedidosListDisenioTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                        }\n                    } else {\n                        if (pedido.state === 'closed')\n                            return (\n                                <PedidosListDisenioTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                    }\n                })}\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidosListDisenio\n","const regexEmail =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const isEmail = email => {\n    if (regexEmail.test(email)) return true\n    return false\n}\n\nexport const isMoreThanOneUrl = string => {\n    if (string.includes(';') || string.includes(',')) return true\n    return false\n}\n\nexport const isValidURL = string => {\n    let url = ''\n\n    try {\n        url = new URL(string)\n    } catch (_) {\n        return false\n    }\n    return true\n}\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { isMoreThanOneUrl, isValidURL } from '../Assets/Regex'\n\nconst PedidosListWebTRows = ({ pedido, selectPedido }) => {\n    const { userType } = useAuth()\n\n    return (\n        <tr onClick={() => selectPedido(pedido)}>\n            <td>{pedido.createAt.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'admin' ? <td className='toUppercase'>{pedido.area}</td> : <td>{pedido.autor.autorName}</td>}\n            <td>\n                {pedido.type === 'noticia' ? 'Noticia Web' : pedido.type === 'crear' ? 'Crear contenido' : 'Modificar contenido'}\n            </td>\n            <td className='bold'>{pedido.date.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'reparticion' ? (\n                pedido.changes ? (\n                    <td>\n                        {isValidURL(pedido.changes) ? (\n                            isMoreThanOneUrl(pedido.changes) ? (\n                                pedido.changes.split(/[,;]+/).map(url => {\n                                    return (\n                                        <a href={url} target='_blank' rel='noreferrer'>\n                                            {url}\n                                        </a>\n                                    )\n                                })\n                            ) : (\n                                <a href={pedido.changes} target='_blank' title='enlace'>\n                                    Enlace\n                                </a>\n                            )\n                        ) : (\n                            pedido.changes\n                        )}\n                    </td>\n                ) : (\n                    <td>{pedido.title ? pedido.title : pedido.linkToContent}</td>\n                )\n            ) : null}\n            {userType === 'admin' ? <td>{pedido.asignedTo?.userName}</td> : <td>{pedido.observaciones}</td>}\n            {userType === 'admin' && (\n                <td\n                    className={\n                        pedido.state === 'created'\n                            ? 'created'\n                            : pedido.state === 'inProgress'\n                            ? 'inProgress'\n                            : pedido.state === 'finalized'\n                            ? 'finalized'\n                            : pedido.state === 'closed' && 'closed'\n                    }\n                >\n                    {pedido.state === 'created'\n                        ? 'Creado'\n                        : pedido.state === 'inProgress'\n                        ? 'En curso'\n                        : pedido.state === 'finalized'\n                        ? 'Finalizado'\n                        : pedido.state === 'closed' && 'Cerrado'}\n                </td>\n            )}\n        </tr>\n    )\n}\n\nexport default PedidosListWebTRows\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport PedidosListWebTRows from './PedidosListWebTRows'\n\nconst PedidosListWeb = ({ pedidos, selectPedido, filter, pedidosOpen }) => {\n    const { userType, currentUser } = useAuth()\n\n    return (\n        <>\n            <thead>\n                <tr className='text-nowrap'>\n                    <th>Realizado</th>\n                    {userType === 'admin' ? <th>Área</th> : <th>Autor</th>}\n                    <th>Tipo de pedido</th>\n                    <th>Fecha de publicación</th>\n                    {userType === 'reparticion' && <th>Titulo, link o modificación</th>}\n                    {userType === 'admin' ? <th>Asignado a</th> : <th>Observaciones</th>}\n\n                    {userType === 'admin' && <th>Estado</th>}\n                </tr>\n            </thead>\n            <tbody>\n                {pedidos.map(pedido => {\n                    if (pedido.pedido !== 'web') return\n                    if (pedidosOpen) {\n                        if (pedido.state === 'closed') return\n                        if (filter) {\n                            if (currentUser.uid === pedido.asignedTo?.currentUserId)\n                                return (\n                                    <PedidosListWebTRows\n                                        key={pedido.id}\n                                        pedido={pedido}\n                                        filter={filter}\n                                        selectPedido={selectPedido}\n                                    />\n                                )\n                        } else {\n                            return (\n                                <PedidosListWebTRows\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                        }\n                    } else {\n                        if (pedido.state === 'closed')\n                            return (\n                                <PedidosListWebTRows\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                    }\n                })}\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidosListWeb\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\n\nconst PedidoListRedesTRow = ({ pedido, selectPedido }) => {\n    const { userType } = useAuth()\n    return (\n        <tr onClick={() => selectPedido(pedido)}>\n            <td>{pedido.createAt.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'admin' ? <td className='toUppercase'>{pedido.area}</td> : <td>{pedido.autor.autorName}</td>}\n            <td>{pedido.type === 'facebook' ? 'Facebook' : pedido.type === 'twitter' ? 'Twitter' : 'Ambas'}</td>\n            <td>{pedido.date.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'reparticion' && <td>{pedido.text}</td>}\n            {userType === 'admin' ? <td>{pedido.asignedTo?.userName}</td> : <td>{pedido.observaciones}</td>}\n            {userType === 'admin' && (\n                <td\n                    className={\n                        pedido.state === 'created'\n                            ? 'created'\n                            : pedido.state === 'inProgress'\n                            ? 'inProgress'\n                            : pedido.state === 'finalized'\n                            ? 'finalized'\n                            : pedido.state === 'closed' && 'closed'\n                    }\n                >\n                    {pedido.state === 'created'\n                        ? 'Creado'\n                        : pedido.state === 'inProgress'\n                        ? 'En curso'\n                        : pedido.state === 'finalized'\n                        ? 'Finalizado'\n                        : pedido.state === 'closed' && 'Cerrado'}\n                </td>\n            )}\n        </tr>\n    )\n}\n\nexport default PedidoListRedesTRow\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport PedidoListRedesTRow from './PedidoListRedesTRow'\n\nconst PedidosListRedes = ({ pedidos, selectPedido, filter, pedidosOpen }) => {\n    const { userType, currentUser } = useAuth()\n    return (\n        <>\n            <thead>\n                <tr className='text-nowrap'>\n                    <th>Realizado</th>\n                    {userType === 'admin' ? <th>Área</th> : <th>Autor</th>}\n                    <th>Tipo de pedido</th>\n                    <th>Fecha de publicación</th>\n                    {userType === 'reparticion' && <th>Texto</th>}\n                    {userType === 'admin' ? <th>Asignado a</th> : <th>Observaciones</th>}\n                    {userType === 'admin' && <th>Estado</th>}\n                </tr>\n            </thead>\n            <tbody>\n                {pedidos.map((pedido, i) => {\n                    if (pedido.pedido !== 'redes') return\n                    if (pedidosOpen) {\n                        if (pedido.state === 'closed') return\n                        if (filter) {\n                            if (currentUser.uid === pedido.asignedTo?.currentUserId)\n                                return (\n                                    <PedidoListRedesTRow\n                                        key={pedido.id}\n                                        pedido={pedido}\n                                        filter={filter}\n                                        selectPedido={selectPedido}\n                                    />\n                                )\n                        } else {\n                            return (\n                                <PedidoListRedesTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                        }\n                    } else {\n                        if (pedido.state === 'closed')\n                            return (\n                                <PedidoListRedesTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                    }\n                })}\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidosListRedes\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\n\nconst PedidosListSomosTRow = ({ pedido, selectPedido }) => {\n    const { userType } = useAuth()\n    return (\n        <tr onClick={() => selectPedido(pedido)}>\n            <td>{pedido.createAt.toDate().toLocaleDateString('en-GB')}</td>\n            {userType === 'admin' ? <td className='toUppercase'>{pedido.area}</td> : <td>{pedido.autor.autorName}</td>}\n            <td className='text-nowrap'>\n                {pedido.type === 'NoTeLoPierdas' ? 'No te lo pierdas' : pedido.type === 'EntreNos' ? 'Entre Nos' : 'Te enteraste'}\n            </td>\n            {userType === 'admin' ? <td>{pedido.asignedTo?.userName}</td> : <td>{pedido.observaciones}</td>}\n            {userType === 'admin' ? (\n                <td\n                    className={\n                        pedido.state === 'created'\n                            ? 'created'\n                            : pedido.state === 'inProgress'\n                            ? 'inProgress'\n                            : pedido.state === 'finalized'\n                            ? 'finalized'\n                            : pedido.state === 'closed' && 'closed'\n                    }\n                >\n                    {pedido.state === 'created'\n                        ? 'Creado'\n                        : pedido.state === 'inProgress'\n                        ? 'En curso'\n                        : pedido.state === 'finalized'\n                        ? 'Finalizado'\n                        : pedido.state === 'closed' && 'Cerrado'}\n                </td>\n            ) : null}\n        </tr>\n    )\n}\n\nexport default PedidosListSomosTRow\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport PedidosListSomosTRow from './PedidosListSomosTRow'\n\nconst PedidosListSomos = ({ pedidos, selectPedido, filter, pedidosOpen }) => {\n    const { userType, currentUser } = useAuth()\n\n    return (\n        <>\n            <thead>\n                <tr className='text-nowrap'>\n                    <th>Realizado</th>\n                    {userType === 'admin' ? <th>Área</th> : <th>Autor</th>}\n                    <th>Sección</th>\n                    {userType === 'admin' ? <th>Asignado a</th> : <th>Observaciones</th>}\n                    {userType === 'admin' ? <th>Estado</th> : null}\n                </tr>\n            </thead>\n            <tbody>\n                {pedidos.map((pedido, i) => {\n                    if (pedido.pedido !== 'somos') return\n                    if (pedido.state === 'closed') return\n                    if (pedidosOpen) {\n                        if (pedido.state === 'closed') return\n                        if (filter) {\n                            if (currentUser.uid === pedido.asignedTo?.currentUserId)\n                                return (\n                                    <PedidosListSomosTRow\n                                        key={pedido.id}\n                                        pedido={pedido}\n                                        filter={filter}\n                                        selectPedido={selectPedido}\n                                    />\n                                )\n                        } else {\n                            return (\n                                <PedidosListSomosTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                        }\n                    } else {\n                        if (pedido.state === 'closed')\n                            return (\n                                <PedidosListSomosTRow\n                                    key={pedido.id}\n                                    pedido={pedido}\n                                    filter={filter}\n                                    selectPedido={selectPedido}\n                                />\n                            )\n                    }\n                })}\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidosListSomos\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\nconst PedidoDetailsAutor = ({ pedido }) => {\n    const { createAt } = pedido\n    const day = createAt.toDate().toLocaleDateString('en-GB')\n    const hour = createAt.toDate().getHours()\n    const minutes = createAt.toDate().getMinutes()\n    return (\n        <>\n            <p>Creado el {`${day} a las ${hour}:${minutes} hs.`}</p>\n            <Table bordered responsive='sm' hover className='w-auto'>\n                <thead>\n                    <tr>\n                        <th colSpan='2'>Autor</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Área: </td>\n                        <td>\n                            <span className='toUppercase bold'>{pedido.area}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Nombre: </td>\n                        <td>\n                            <span className='bold'>{pedido.autor.autorName}</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Correo Electrónico:</td>\n                        <td>\n                            <a href={`mailto:${pedido.autor.autorEmail}`} rel='noreferrer' target='_blank'>\n                                {pedido.autor.autorEmail}\n                            </a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Correos Electrónicos en Copia:</td>\n                        <td>\n                            {pedido.autor.emailsToCopy.map((e, i) => {\n                                return pedido.autor.emailsToCopy.length === i + 1 ? (\n                                    <a key={i + e} href={`mailto:${e}`} target='_blank' rel='noreferrer'>\n                                        {e}\n                                    </a>\n                                ) : (\n                                    <>\n                                        <a key={i + e} href={`mailto:${e}`} target='_blank' rel='noreferrer'>\n                                            {e}\n                                        </a>\n                                        ,{' '}\n                                    </>\n                                )\n                            })}\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default PedidoDetailsAutor\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { isMoreThanOneUrl, isValidURL } from '../Assets/Regex'\n\nconst PedidoDetailsDisenio = ({ pedido }) => {\n    const { userType } = useAuth()\n\n    return (\n        <>\n            <thead>\n                <tr>\n                    <th colSpan='2'>Pedido</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Tipo de Pieza:</td>\n                    <td>\n                        {pedido.type === 'impresa'\n                            ? 'Pieza Impresa'\n                            : pedido.type === 'digital'\n                            ? 'Pieza Digital'\n                            : pedido.type === 'ambas'\n                            ? 'Ambas'\n                            : null}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Fecha de entrega:</td>\n                    <td>\n                        <span className='bold'>{pedido.formatedDate}</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Especificaciones:</td>\n                    <td>{pedido.specs}</td>\n                </tr>\n                <tr>\n                    <td>Texto para la pieza:</td>\n                    <td>\n                        {isValidURL(pedido.text) ? (\n                            isMoreThanOneUrl(pedido.text) ? (\n                                pedido.text.split(/[,;]+/).map(url => {\n                                    return (\n                                        <a href={url} target='_blank' rel='noreferrer'>\n                                            {url}\n                                        </a>\n                                    )\n                                })\n                            ) : (\n                                <a href={pedido.text} target='_blank' rel='noreferrer'>\n                                    {pedido.text}\n                                </a>\n                            )\n                        ) : (\n                            pedido.text\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Imágenes:</td>\n                    <td>\n                        {isMoreThanOneUrl(pedido.img) ? (\n                            pedido.img.split(/[,;]+/).map(url => {\n                                return (\n                                    <a href={url} target='_blank' rel='noreferrer'>\n                                        {url}\n                                    </a>\n                                )\n                            })\n                        ) : (\n                            <a href={pedido.img} target='_blank' rel='noreferrer'>\n                                {pedido.img}\n                            </a>\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Observaciones:</td>\n                    <td>{pedido.observaciones.toString()}</td>\n                </tr>\n                {userType === 'admin' && pedido.asignedTo && (\n                    <tr>\n                        <td>Asignado a:</td>\n                        <td>{pedido.asignedTo.userName}</td>\n                    </tr>\n                )}\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidoDetailsDisenio\n","import React from 'react'\nimport { isMoreThanOneUrl, isValidURL } from '../Assets/Regex'\n\nconst PedidoDetailsWeb = ({ pedido }) => {\n    return (\n        <>\n            <thead>\n                <tr>\n                    <th colSpan='2'>Pedido</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Tipo de pedido:</td>\n                    <td>\n                        {pedido.type === 'noticia'\n                            ? 'Noticia web'\n                            : pedido.type === 'crear'\n                            ? 'Crear contenido'\n                            : pedido.type === 'modificar' && 'Modificar contenido'}\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Fecha de{' '}\n                        {pedido.type === 'noticia' || 'crear' ? 'publicación' : pedido.type === 'modificar' && 'modificación'}:\n                    </td>\n                    <td>\n                        <span className='bold'>{pedido.createAt.toDate().toLocaleDateString('en-GB')}</span>\n                    </td>\n                </tr>\n                {pedido.type === 'noticia' ? (\n                    pedido.title ? (\n                        <>\n                            <tr>\n                                <td>Titulo:</td>\n                                <td>{pedido.title}</td>\n                            </tr>\n                            <tr>\n                                <td>Descripción:</td>\n                                <td>{pedido.description}</td>\n                            </tr>\n                            <tr>\n                                <td>Cuerpo:</td>\n                                <td>{pedido.body}</td>\n                            </tr>\n                        </>\n                    ) : (\n                        <tr>\n                            <td>Enlace al contenido:</td>\n                            <td>\n                                {isMoreThanOneUrl(pedido.linkToContent) ? (\n                                    pedido.linkToContent.split(/[,;]+/).map(url => {\n                                        return (\n                                            <a href={url} target='_blank' rel='noreferrer'>\n                                                {url}\n                                            </a>\n                                        )\n                                    })\n                                ) : (\n                                    <a href={pedido.linkToContent} target='_blank' rel='noreferrer'>\n                                        {pedido.linkToContent}\n                                    </a>\n                                )}\n                            </td>\n                        </tr>\n                    )\n                ) : pedido.type === 'crear' ? (\n                    pedido.title ? (\n                        <>\n                            <tr>\n                                <td>Titulo:</td>\n                                <td>{pedido.title}</td>\n                            </tr>\n                            <tr>\n                                <td>Descripción:</td>\n                                <td>{pedido.description}</td>\n                            </tr>\n                            <tr>\n                                <td>Cuerpo:</td>\n                                <td>{pedido.body}</td>\n                            </tr>\n                        </>\n                    ) : (\n                        <tr>\n                            <td>Enlace al contenido:</td>\n                            <td>\n                                {isMoreThanOneUrl(pedido.linkToContent) ? (\n                                    pedido.linkToContent.split(/[,;]+/).map(url => {\n                                        return (\n                                            <a href={url} target='_blank' rel='noreferrer'>\n                                                {url}\n                                            </a>\n                                        )\n                                    })\n                                ) : (\n                                    <a href={pedido.linkToContent} target='_blank' rel='noreferrer'>\n                                        {pedido.linkToContent}\n                                    </a>\n                                )}\n                            </td>\n                        </tr>\n                    )\n                ) : (\n                    <>\n                        <tr>\n                            <td>Web a modificar:</td>\n                            <td>\n                                {isMoreThanOneUrl(pedido.webToModify) ? (\n                                    pedido.webToModify.split(/[,;]+/).map(url => {\n                                        return (\n                                            <a href={url} target='_blank' rel='noreferrer'>\n                                                {url}\n                                            </a>\n                                        )\n                                    })\n                                ) : (\n                                    <a href={pedido.webToModify} target='_blank' rel='noreferrer'>\n                                        {pedido.webToModify}\n                                    </a>\n                                )}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Cambios a realizar:</td>\n                            <td>\n                                {isValidURL(pedido.changes) ? (\n                                    isMoreThanOneUrl(pedido.changes) ? (\n                                        pedido.changes.split(/[,;]+/).map(url => {\n                                            return (\n                                                <a href={url} target='_blank' rel='noreferrer'>\n                                                    {url}\n                                                </a>\n                                            )\n                                        })\n                                    ) : (\n                                        <a href={pedido.changes}>{pedido.changes}</a>\n                                    )\n                                ) : (\n                                    pedido.changes\n                                )}\n                            </td>\n                        </tr>\n                    </>\n                )}\n\n                <tr>\n                    <td>Imágenes:</td>\n                    <td>\n                        {isMoreThanOneUrl(pedido.img) ? (\n                            pedido.img.split(/[,;]+/).map(url => {\n                                return (\n                                    <a href={url} target='_blank' rel='noreferrer'>\n                                        {url}\n                                    </a>\n                                )\n                            })\n                        ) : (\n                            <a href={pedido.img} target='_blank' rel='noreferrer'>\n                                {pedido.img}\n                            </a>\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Observaciones</td>\n                    <td>{pedido.observaciones}</td>\n                </tr>\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidoDetailsWeb\n","import React from 'react'\nimport { isValidURL, isMoreThanOneUrl } from '../Assets/Regex'\n\nconst PedidoDetailsRedes = ({ pedido }) => {\n    return (\n        <>\n            <thead>\n                <tr>\n                    <th colSpan='2'>Pedido</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Publicar en: </td>\n                    <td>\n                        {pedido.type === 'facebook'\n                            ? 'Facebook'\n                            : pedido.type === 'twitter'\n                            ? 'Twitter'\n                            : pedido.type === 'ambas' && 'Ambas'}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Fecha de publicación: </td>\n                    <td className='bold'>{pedido.formatedDate}</td>\n                </tr>\n                <tr>\n                    <td>Texto para la publicación</td>\n                    <td>\n                        {isValidURL(pedido.text) ? (\n                            <a href={pedido.text} target='_blank' rel='noreferrer'>\n                                {pedido.text}\n                            </a>\n                        ) : (\n                            pedido.text\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Imágenes: </td>\n                    <td>\n                        {isMoreThanOneUrl(pedido.img) ? (\n                            pedido.img.split(/[,;]+/).map(url => {\n                                return (\n                                    <a href={url} target='_blank' rel='noreferrer'>\n                                        {url}\n                                    </a>\n                                )\n                            })\n                        ) : (\n                            <a href={pedido.img} target='_blank' rel='noreferrer'>\n                                {pedido.img}\n                            </a>\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Observaciones: </td>\n                    <td>{pedido.observaciones}</td>\n                </tr>\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidoDetailsRedes\n","import React from 'react'\nimport { isMoreThanOneUrl, isValidURL } from '../Assets/Regex'\n\nconst PedidoDetailsSomos = ({ pedido }) => {\n    return (\n        <>\n            <thead>\n                <tr>\n                    <th colSpan='2'>Pedido</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Sección: </td>\n                    <td>\n                        {pedido.type === 'NoTeLoPierdas'\n                            ? 'No te lo pierdas'\n                            : pedido.type === 'EntreNos'\n                            ? 'Entre Nos'\n                            : pedido.type === 'TeEnteraste' && 'Te enteraste'}\n                    </td>\n                </tr>\n                {pedido.title && (\n                    <tr>\n                        <td>Titulo para la noticia: </td>\n                        <td>{pedido.title}</td>\n                    </tr>\n                )}\n                <tr>\n                    <td>Texto para la noticia: </td>\n                    <td>\n                        {isValidURL(pedido.text) ? (\n                            isMoreThanOneUrl(pedido.text) ? (\n                                pedido.text.split(/[,;]+/).map(url => {\n                                    return (\n                                        <a href={url} target='_blank' rel='noreferrer'>\n                                            {url}\n                                        </a>\n                                    )\n                                })\n                            ) : (\n                                <a href={pedido.text} target='_blank' rel='noreferrer'>\n                                    {pedido.text}\n                                </a>\n                            )\n                        ) : (\n                            pedido.text\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Imágenes: </td>\n                    <td>\n                        {isMoreThanOneUrl(pedido.img) ? (\n                            pedido.img.split(/[,;]+/).map(url => {\n                                return (\n                                    <a href={url} target='_blank' rel='noreferrer'>\n                                        {url}\n                                    </a>\n                                )\n                            })\n                        ) : (\n                            <a href={pedido.img} target='_blank' rel='noreferrer'>\n                                {pedido.img}\n                            </a>\n                        )}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Observaciones</td>\n                    <td>{pedido.observaciones}</td>\n                </tr>\n            </tbody>\n        </>\n    )\n}\n\nexport default PedidoDetailsSomos\n","import React, { useState } from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { Button } from 'react-bootstrap'\n\nconst PedidosDetailsStateInfo = () => {\n    const { userType } = useAuth()\n\n    const [show, setShow] = useState(false)\n\n    const showAction = () => {\n        setShow(show => !show)\n    }\n\n    return (\n        <div className='stateChange'>\n            <Button onClick={() => showAction()} variant='secondary' className='mb-3'>\n                Más información sobre los estados\n            </Button>\n            <div style={{ display: show ? 'block' : 'none' }} className='stateChangeInfo'>\n                <p className='mb-0'>\n                    <small>\n                        {userType === 'reparticion'\n                            ? 'El equipo de comunicación podrá cambiar el estado de \"Creado\" a \"En curso\" y una vez finalizado lo cambiará a \"Finalizado\".'\n                            : 'Como parte del equipo de comunicación podrás cambiar el estado de \"Creado\" a \"En curso\" si ya lo vas a empezar y una vez que lo finalices a \"Finalizado\".'}\n                    </small>\n                </p>\n                <p className='mb-0'>\n                    <small>\n                        {userType === 'reparticion'\n                            ? 'Si considerás que el trabajo está listo podrás cambiarle el estado a \"Cerrado\", esto hará que se deje de visualizar en esta página.'\n                            : 'Si la repartición que realizó el pedido esta conforme con el mismo cambiará el estado a \"Cerrado\"'}\n                    </small>\n                </p>\n                <p className='mb-0'>\n                    <small>De esta forma evitamos que se acumulen muchos pedidos.</small>\n                </p>\n                <p>\n                    <small>\n                        *El pedido cambiará su estado a \"Cerrado\" autómaticamente luego de 7 días de haber sido \"Finalizado\".\n                    </small>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default PedidosDetailsStateInfo\n","import React, { useEffect } from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport { usePedidosState } from '../Context/PedidosStateContext'\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\nimport PedidosDetailsStateInfo from '../Components/PedidosDetailsStateInfo'\n\nconst PedidosDetailsState = ({ pedido }) => {\n    const { userType } = useAuth()\n\n    const { changeState, autoCloseState } = usePedidosState()\n\n    useEffect(() => {\n        if (!pedido.stateChangeTimestamp) return\n        let stateChange = pedido.stateChangeTimestamp.seconds * 1000\n        let now = new Date().getTime()\n        let diff = now - stateChange\n        let days = Math.floor(diff / (24 * 60 * 60 * 1000))\n        if (days < 8) return\n        if (pedido.state === 'finalized') autoCloseState(pedido)\n    }, [])\n\n    return (\n        <>\n            <p className='mb-3'>\n                Estado del pedido:{' '}\n                <span\n                    className={\n                        pedido.state === 'created'\n                            ? 'created'\n                            : pedido.state === 'inProgress'\n                            ? 'inProgress'\n                            : pedido.state === 'finalized'\n                            ? 'finalized'\n                            : pedido.state === 'closed' && 'closed'\n                    }\n                >\n                    {pedido.state === 'created'\n                        ? 'Creado'\n                        : pedido.state === 'inProgress'\n                        ? 'En curso'\n                        : pedido.state === 'finalized'\n                        ? 'Finalizado'\n                        : pedido.state === 'closed' && 'Cerrado'}\n                </span>\n            </p>\n            <PedidosDetailsStateInfo />\n            {pedido.state !== 'closed' && (\n                <DropdownButton variant='primary' drop='down' id='dropdown-basic-button' title='Cambiar estado'>\n                    {pedido.state === 'created' && (\n                        <Dropdown.Item\n                            disabled={userType === 'reparticion'}\n                            onClick={() => {\n                                changeState(pedido, pedido.state)\n                            }}\n                        >\n                            En curso\n                        </Dropdown.Item>\n                    )}\n                    {pedido.state === 'inProgress' && (\n                        <Dropdown.Item\n                            disabled={userType === 'reparticion'}\n                            onClick={() => {\n                                changeState(pedido, pedido.state)\n                            }}\n                        >\n                            Finalizado\n                        </Dropdown.Item>\n                    )}\n                    {pedido.state === 'finalized' && (\n                        <Dropdown.Item\n                            disabled={userType === 'admin'}\n                            onClick={() => {\n                                changeState(pedido, pedido.state)\n                            }}\n                        >\n                            Cerrado\n                        </Dropdown.Item>\n                    )}\n                </DropdownButton>\n            )}\n        </>\n    )\n}\n\nexport default PedidosDetailsState\n","import React, { useContext, createContext, useState, useEffect } from 'react'\nimport { projectFirestore } from '../firebase'\nimport { useAuth } from './AuthContext'\n\nconst AsignPedidosContext = createContext()\n\nconst { Provider } = AsignPedidosContext\n\nexport const useAsignPedidosProvider = () => {\n    return useContext(AsignPedidosContext)\n}\n\nexport const AsignPedidosProvider = ({ children }) => {\n    const { currentUser } = useAuth()\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n        if (!currentUser) return\n        const unsub = projectFirestore\n            .collection('usuarios')\n            .where('admin', '==', true)\n            .onSnapshot(snap => {\n                let documents = []\n                if (snap.empty) return setUsers([{ 'empty': true }])\n                snap.forEach(doc => {\n                    documents.push(doc.data())\n                })\n                setUsers(documents)\n            })\n\n        return () => {\n            unsub()\n        }\n    }, [currentUser])\n\n    const [valideUsers, setValidUsers] = useState([])\n    /* console.log('AsignPedidosProvider => ', valideUsers)\n    console.log('AsignPedidosProvider / users => ', users) */\n    useEffect(() => {\n        /* console.log('AsignPedidosProvider => ', valideUsers) */\n        if (users.length === 0) return\n        users.filter(user => {\n            if (user.emailNotifications.find(noti => noti.on == true)) {\n                setValidUsers(valideUsers => [...valideUsers, user])\n            }\n        })\n    }, [users])\n\n    const asignPedido = async (pedido, user) => {\n        console.log('pedido => ', pedido)\n        console.log('user => ', user)\n\n        let data = {\n            ...pedido,\n            asignedTo: user,\n        }\n\n        const projectColection = projectFirestore.collection('pedidos')\n        const projectDoc = projectColection.doc(pedido.id)\n\n        return await projectDoc\n            .update({\n                ...data,\n            })\n            .then()\n            .catch(err => console.log(err))\n    }\n\n    const value = { valideUsers, asignPedido }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React from 'react'\nimport { useAsignPedidosProvider } from '../Context/AsignPedidosContext'\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\n\nconst AsignPedidos = ({ pedido }) => {\n    const { valideUsers, asignPedido } = useAsignPedidosProvider()\n    return (\n        <DropdownButton title='Asignar pedido a' variant='primary' drop='down' id='dropdown-basic-button'>\n            {valideUsers.map(valideUser => {\n                return (\n                    <Dropdown.Item\n                        onClick={() =>\n                            asignPedido(pedido, {\n                                userName: valideUser.name,\n                                userId: valideUser.id,\n                                currentUserId: valideUser.userId,\n                            })\n                        }\n                        key={valideUser.id}\n                    >\n                        {valideUser.name}\n                    </Dropdown.Item>\n                )\n            })}\n        </DropdownButton>\n    )\n}\n\nexport default AsignPedidos\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../../Context/AuthContext'\nimport { useAllPedidos } from '../../Context/AllPedidosContext'\nimport { useLocation } from 'react-router-dom'\nimport { pedidosType } from '../../Assets/data'\nimport { Container, Row, Col, Card, Table, Button } from 'react-bootstrap'\n\nimport PedidosListDisenio from '../../Components/PedidosListDisenio'\nimport PedidosListWeb from '../../Components/PedidosListWeb'\nimport PedidosListRedes from '../../Components/PedidosListRedes'\nimport PedidosListSomos from '../../Components/PedidosListSomos'\nimport PedidoDetailsAutor from '../../Components/PedidoDetailsAutor'\nimport PedidoDetailsDisenio from '../../Components/PedidoDetailsDisenio'\nimport PedidoDetailsWeb from '../../Components/PedidoDetailsWeb'\nimport PedidoDetailsRedes from '../../Components/PedidoDetailsRedes'\nimport PedidoDetailsSomos from '../../Components/PedidoDetailsSomos'\nimport PedidosDetailsState from '../../Components/PedidosDetailsState'\nimport AsignPedidos from '../../Components/AsignPedidos'\n\nconst Pedidos = () => {\n    const { userType } = useAuth()\n    const { pedidos } = useAllPedidos()\n    const [typeSelected, setTypeSelected] = useState(null)\n    const [pedido, setPedido] = useState(null)\n    const [filter, setFilter] = useState(false)\n    const [pedidosExpanded, setPedidosExpanded] = useState(true)\n\n    const handleTypes = type => {\n        if (type === typeSelected) return setTypeSelected(null)\n        setTypeSelected(type)\n    }\n\n    const selectPedido = pedido => {\n        setPedido(pedido)\n    }\n\n    useEffect(() => {\n        if (!pedido) return\n        pedidos.map(ped => {\n            if (pedido.state === 'closed') return setPedido(null)\n            if (pedido.id === ped.id) setPedido(ped)\n        })\n    }, [pedidos])\n\n    useEffect(() => {\n        setPedido(null)\n    }, [typeSelected])\n\n    const location = useLocation()\n    useEffect(() => {\n        if (!location.search) return\n        const search = location.search.replace('?', '')\n        setTypeSelected(search)\n    }, [location])\n\n    const expandedPedidosTypeSelect = () => {\n        if (pedidosExpanded) {\n            localStorage.setItem('pedidosExpanded', false)\n        } else {\n            localStorage.setItem('pedidosExpanded', true)\n        }\n        setPedidosExpanded(pedidosExpanded => !pedidosExpanded)\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem('pedidosExpanded')) return\n        if (localStorage.getItem('pedidosExpanded') === 'true') return setPedidosExpanded(true)\n        setPedidosExpanded(false)\n    }, [])\n\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Pedidos</h1>\n                <p>Llevá el seguimiento de los pedidos realizados al área de comunicación del Ministerio</p>\n            </div>\n            <Row>\n                <Col className='mb-3' lg={pedidosExpanded ? 3 : 1}>\n                    <Card className={`pedidos ${pedidosExpanded ? 'expanded' : 'notExpanded'}`}>\n                        <Card.Header>\n                            <div\n                                className={`d-flex w-100 ${pedidosExpanded ? 'justify-content-between' : 'justify-content-end'}`}\n                            >\n                                <span style={{ display: pedidosExpanded ? 'block' : 'none' }} className='cardTitleExpandable'>\n                                    Hacé clic para ver el listado de pedidos\n                                </span>\n                                <button\n                                    onClick={() => {\n                                        expandedPedidosTypeSelect()\n                                    }}\n                                    className='material-icons materialBtn'\n                                    title='Contraer tarjeta'\n                                >\n                                    chevron_right\n                                </button>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className='allTypes'>\n                                {pedidosType.map((type, i) => {\n                                    return (\n                                        <div\n                                            key={i}\n                                            className={`allType ${typeSelected === type.id ? 'active' : ''}`}\n                                            onClick={() => handleTypes(type.id)}\n                                        >\n                                            <span className='material-icons'>{type.icon}</span>\n                                            <div className='allTypes-info'>\n                                                <p>{type.name}</p>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col lg={pedidosExpanded ? 9 : 11} className='mb-3'>\n                    {typeSelected && (\n                        <Card>\n                            <Card.Header>\n                                {typeSelected === 'disenio'\n                                    ? 'Pedidos de Diseño'\n                                    : typeSelected === 'web'\n                                    ? 'Pedido Web GCBA'\n                                    : typeSelected === 'redes'\n                                    ? 'Pedido de publicación en Redes'\n                                    : typeSelected === 'somos' && 'Noticia para Somos'}\n                            </Card.Header>\n                            <Card.Body>\n                                {userType === 'admin' && (\n                                    <Button className='mb-3' variant='primary' onClick={() => setFilter(filter => !filter)}>\n                                        {filter ? 'Ver todos los pedidos' : 'Ver pedidos asignos a mi'}\n                                    </Button>\n                                )}\n                                <Table responsive='sm' bordered hover className='pedidosList'>\n                                    {typeSelected === 'disenio' ? (\n                                        <PedidosListDisenio\n                                            pedidos={pedidos}\n                                            filter={filter}\n                                            selectPedido={selectPedido}\n                                            pedidosOpen={true}\n                                        />\n                                    ) : typeSelected === 'web' ? (\n                                        <PedidosListWeb\n                                            pedidos={pedidos}\n                                            filter={filter}\n                                            selectPedido={selectPedido}\n                                            pedidosOpen={true}\n                                        />\n                                    ) : typeSelected === 'redes' ? (\n                                        <PedidosListRedes\n                                            pedidos={pedidos}\n                                            filter={filter}\n                                            selectPedido={selectPedido}\n                                            pedidosOpen={true}\n                                        />\n                                    ) : (\n                                        typeSelected === 'somos' && (\n                                            <PedidosListSomos\n                                                pedidos={pedidos}\n                                                filter={filter}\n                                                selectPedido={selectPedido}\n                                                pedidosOpen={true}\n                                            />\n                                        )\n                                    )}\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {pedido ? (\n                <Card className='pedidosListDetailsCard'>\n                    <Card.Header>\n                        <span className='material-icons pedidosListDetailsCardDismiss' onClick={() => setPedido(null)}>\n                            cancel\n                        </span>\n                        Detalles del pedido\n                    </Card.Header>\n                    <Card.Body>\n                        <PedidoDetailsAutor pedido={pedido} />\n                        <Table bordered hover responsive='sm' className='w-auto pedidoDetails'>\n                            {pedido.pedido === 'disenio' ? (\n                                <PedidoDetailsDisenio pedido={pedido} />\n                            ) : pedido.pedido === 'redes' ? (\n                                <PedidoDetailsRedes pedido={pedido} />\n                            ) : pedido.pedido === 'web' ? (\n                                <PedidoDetailsWeb pedido={pedido} />\n                            ) : (\n                                pedido.pedido === 'somos' && <PedidoDetailsSomos pedido={pedido} />\n                            )}\n                        </Table>\n                        <PedidosDetailsState pedido={pedido} />\n                        <AsignPedidos pedido={pedido} />\n                        <Button as={Link} to={`/pedido/${pedido.id}`}>\n                            Ver en página completa\n                        </Button>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </Container>\n    )\n}\n\nexport default Pedidos\n","import React, { useState, useEffect } from 'react'\nimport { Card, Form, Button, Alert, ProgressBar } from 'react-bootstrap'\nimport { useDescargas } from '../Context/DescargasContext'\n\nconst DescargasCrear = () => {\n    const { uploadFile, progress, error: uploadError } = useDescargas()\n\n    const [file, setFile] = useState(null)\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [type, setType] = useState('')\n    const [uploadValue, setUploadValue] = useState('')\n    const [error, setError] = useState('')\n\n    const allowedTypes = [\n        'image/png',\n        'image/jpg',\n        'image/jpeg',\n        'image/svg+xml',\n        'application/postscript',\n        'application/pdf',\n        'application/msword',\n        'application/x-7z-compressed',\n        'application/zip',\n        'application/x-zip-compressed',\n        'application/x-rar-compressed',\n        'application/x-tar',\n        'application/vnd.rar',\n        'application/pdf',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    ]\n\n    const handleName = e => {\n        setName(e.target.value)\n    }\n    const handleDescription = e => {\n        setDescription(e.target.value)\n    }\n\n    const onUploadChangeFunction = e => {\n        let selected = e.target.files[0]\n        let allowed = allowedTypes.includes(selected.type)\n        if (!allowed && selected.type !== '' && !selected.name.includes('rar')) {\n            setUploadValue('')\n            setFile(null)\n            return setError('Tipo de archivo no permitido')\n        }\n        if (selected.size > 25000000) {\n            setUploadValue('')\n            setFile(null)\n            return setError('El archivo no puede superar los 25MB')\n        }\n        setUploadValue(selected.name)\n        setFile(selected)\n        setError('')\n        if (selected.type === '') return setType('.rar')\n        setType(selected.type)\n    }\n    const handleUploadDescarga = async e => {\n        e.preventDefault()\n        let data = {\n            name,\n            description,\n            type,\n            fileName: uploadValue,\n            empty: false,\n        }\n\n        await uploadFile(file, data, 'descargas')\n        if (uploadError) setError(uploadError)\n        if (uploadError) return console.log(uploadError)\n    }\n\n    useEffect(() => {\n        if (progress !== 100) return\n        setFile(null)\n        setName('')\n        setType('')\n        setDescription('')\n        setUploadValue('')\n    }, [progress])\n\n    return (\n        <Card>\n            <Card.Header>\n                <span className='material-icons'>add_circle</span> Subí una nueva opción de descarga\n            </Card.Header>\n            <Card.Body>\n                {error && <Alert variant='danger'>{error}</Alert>}\n                <Form onSubmit={e => handleUploadDescarga(e)}>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Nombre del archivo</Form.Label>\n                        <Form.Control value={name} onChange={e => handleName(e)} type='text' />\n                    </Form.Group>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Descripción</Form.Label>\n                        <Form.Control value={description} onChange={e => handleDescription(e)} type='text' />\n                    </Form.Group>\n                    <Form.Group className='formGroup'>\n                        <Form.Label>Archivo</Form.Label>\n                        <div className='customUploadWrapper'>\n                            <span className='customUpload'>{uploadValue ? uploadValue : 'No se cargó ningún archivo'}</span>\n                            <Form.Control\n                                className='form-file'\n                                type='file'\n                                onChange={e => onUploadChangeFunction(e)}\n                                key={progress}\n                            />\n                        </div>\n                        <ProgressBar className='my-3' now={Math.round(progress)} />\n                        <small>\n                            Archivos permitidos: .jpg / .jpeg / .png / .svg / .ai / .doc / .ppt / .pdf / .rar / .zip / .7z\n                        </small>\n                    </Form.Group>\n                    <Form.Group className='formGroup'>\n                        <Button className='btnWithIcon' type='submit'>\n                            Subir <span className='material-icons'>file_upload</span>\n                        </Button>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default DescargasCrear\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport DescargasCard from '../../Components/DescargasCard'\nimport DescargasCrear from '../../Components/DescargasCrear'\n\nconst EditarDescargas = () => {\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Editar Descargas</h1>\n                <p>Administrá la página de descargas</p>\n                <h4>Subí archivos que pueden ser de utilidad para los usuarios de la plataforma</h4>\n            </div>\n            <Row>\n                <Col xl={8}>\n                    <DescargasCard hasLink={false} />\n                </Col>\n                <Col xl={4}>\n                    <DescargasCrear />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EditarDescargas\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { useAuth } from '../Context/AuthContext'\nimport { Alert, Form, Button } from 'react-bootstrap'\n\nconst CrearUsuarioForm = () => {\n    const { signup } = useAuth()\n\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatedPassword, setRepeatedPassword] = useState('')\n    const [userType, setUserType] = useState('@pediloya.reparticion')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const history = useHistory()\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (userName.indexOf(' ') >= 0) {\n            return setError('El nombre de usuario no puede contener espacios')\n        }\n        if (password !== repeatedPassword) {\n            return setError('Las contraseñas deben coincidir')\n        }\n        let emailFromUserName = userName + userType\n        try {\n            setError('')\n            setLoading(true)\n            await signup(emailFromUserName, password)\n            history.push('/')\n        } catch {\n            setError('Ocurrio un error, vuelva a intentarlo en unos minutos')\n            setLoading(false)\n        }\n    }\n\n    const handleUserNameInput = e => {\n        setUserName(e.target.value)\n        setError('')\n    }\n    const handlePassInput = e => {\n        setPassword(e.target.value)\n        setError('')\n    }\n    const handleRepeatedPassInput = e => {\n        setRepeatedPassword(e.target.value)\n    }\n    const handleUserType = e => {\n        setUserType(e.target.value)\n        setError('')\n    }\n\n    return (\n        <>\n            {error && <Alert variant='danger'>{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id='email' className='formGroup'>\n                    <Form.Label>Nombre de usuario</Form.Label>\n                    <Form.Control value={userName} onChange={e => handleUserNameInput(e)} type='text' required />\n                    <small>El nombre de usuario no debe contener espacios</small>\n                </Form.Group>\n                <Form.Group id='password' className='formGroup'>\n                    <Form.Label>Contraseña</Form.Label>\n                    <Form.Control value={password} onChange={e => handlePassInput(e)} type='password' required />\n                </Form.Group>\n                <Form.Group id='password_confirm' className='formGroup'>\n                    <Form.Label>Repetir Contraseña</Form.Label>\n                    <Form.Control value={repeatedPassword} onChange={e => handleRepeatedPassInput(e)} type='password' required />\n                </Form.Group>\n                <Form.Group className='formGroup'>\n                    <Form.Label className='d-flex'>\n                        <span className='material-icons mr-1 settings'>settings</span>\n                        Tipo de usuario\n                    </Form.Label>\n                    <Form.Control onChange={e => handleUserType(e)} as='select'>\n                        <option value='@pediloya.reparticion'>Repartición</option>\n                        <option value='@pediloya.admin'>Equipo de Comunicación</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group className='formGroup'>\n                    <Button disabled={loading} className='w-100' type='submit'>\n                        Crear\n                    </Button>\n                </Form.Group>\n            </Form>\n        </>\n    )\n}\n\nexport default CrearUsuarioForm\n","import React from 'react'\nimport { Container, Card } from 'react-bootstrap'\nimport CrearUsuarioForm from '../../Components/CrearUsuarioForm'\n\nconst CrearUsuario = () => {\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Crear usuario!</h1>\n                <p>\n                    Podés crear usuarios para un <strong>área</strong> o para un integrante del{' '}\n                    <strong>equipo de Comunicación</strong>.\n                </p>\n            </div>\n            <Card className='w-100' style={{ maxWidth: '550px', margin: '0 auto' }}>\n                <Card.Header>\n                    <span className='material-icons'>person_add</span> Crear usuario\n                </Card.Header>\n                <Card.Body>\n                    <CrearUsuarioForm />\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default CrearUsuario\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../Context/AuthContext'\nimport { Card, Table, Button } from 'react-bootstrap'\n\nimport PedidoDetailsAutor from './PedidoDetailsAutor'\nimport PedidoDetailsDisenio from './PedidoDetailsDisenio'\nimport PedidoDetailsWeb from './PedidoDetailsWeb'\nimport PedidoDetailsSomos from './PedidoDetailsSomos'\nimport PedidoDetailsRedes from './PedidoDetailsRedes'\nimport PedidosDetailsState from './PedidosDetailsState'\nimport AsignPedidos from './AsignPedidos'\n\nconst PedidoDetails = ({ pedido }) => {\n    const { userType } = useAuth()\n\n    return (\n        <>\n            <Card className='pedidoDetails'>\n                <Card.Header>\n                    {`${\n                        pedido.pedido === 'redes'\n                            ? 'Pedido de publicación en Redes'\n                            : pedido.pedido === 'web'\n                            ? 'Web GCBA'\n                            : pedido.pedido === 'somos'\n                            ? 'Noticia para Somos'\n                            : pedido.pedido === 'disenio'\n                            ? 'Pedido de Diseño'\n                            : ''\n                    }`}\n                </Card.Header>\n                <Card.Body>\n                    <PedidoDetailsAutor pedido={pedido} />\n                    <Table bordered hover responsive='sm' className='w-auto'>\n                        {pedido.pedido === 'disenio' ? (\n                            <PedidoDetailsDisenio pedido={pedido} />\n                        ) : pedido.pedido === 'web' ? (\n                            <PedidoDetailsWeb pedido={pedido} />\n                        ) : pedido.pedido === 'somos' ? (\n                            <PedidoDetailsSomos pedido={pedido} />\n                        ) : (\n                            pedido.pedido === 'redes' && <PedidoDetailsRedes pedido={pedido} />\n                        )}\n                    </Table>\n                    <PedidosDetailsState pedido={pedido} />\n                    {userType === 'admin' && (\n                        <>\n                            <AsignPedidos pedido={pedido} />\n                        </>\n                    )}\n                    <Button className='btn btn-primary btnMarginR' as={Link} to={`/pedido/${pedido.id}`}>\n                        Ver en página completa\n                    </Button>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default PedidoDetails\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { Container } from 'react-bootstrap'\nimport { useAllPedidos } from '../../Context/AllPedidosContext'\nimport Loading from '../../Components/Loading'\nimport PedidoDetails from '../../Components/PedidoDetails'\n\nconst Pedido = () => {\n    const { pedidos } = useAllPedidos()\n    const [pedido, setPedido] = useState(null)\n\n    const params = useParams()\n\n    useEffect(() => {\n        setPedido(pedidos.find(p => params.id === p.id))\n    }, [params.id, pedidos])\n\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Detalles del Pedido</h1>\n            </div>\n\n            {!pedido ? <Loading /> : <PedidoDetails pedido={pedido} />}\n        </Container>\n    )\n}\n\nexport default Pedido\n","import React, { useState, useEffect } from 'react'\nimport { useAllPedidos } from '../../Context/AllPedidosContext'\nimport { Link } from 'react-router-dom'\nimport { Container, Card, Row, Col, Table, Button } from 'react-bootstrap'\nimport { pedidosType } from '../../Assets/data'\nimport PedidosListDisenio from '../../Components/PedidosListDisenio'\nimport PedidosListWeb from '../../Components/PedidosListWeb'\nimport PedidosListRedes from '../../Components/PedidosListRedes'\nimport PedidosListSomos from '../../Components/PedidosListSomos'\nimport PedidoDetailsAutor from '../../Components/PedidoDetailsAutor'\nimport PedidoDetailsDisenio from '../../Components/PedidoDetailsDisenio'\nimport PedidoDetailsWeb from '../../Components/PedidoDetailsWeb'\nimport PedidoDetailsRedes from '../../Components/PedidoDetailsRedes'\nimport PedidoDetailsSomos from '../../Components/PedidoDetailsSomos'\nimport PedidosDetailsState from '../../Components/PedidosDetailsState'\nconst PedidosCerrados = () => {\n    const { pedidos } = useAllPedidos()\n\n    const [typeSelected, setTypeSelected] = useState(null)\n    const [pedido, setPedido] = useState(null)\n    const [pedidosExpanded, setPedidosExpanded] = useState(true)\n\n    const handleTypes = type => {\n        if (type === typeSelected) return setTypeSelected(null)\n        setTypeSelected(type)\n    }\n\n    const selectPedido = pedido => {\n        setPedido(pedido)\n    }\n\n    useEffect(() => {\n        if (!pedido) return\n        pedidos.map(ped => {\n            if (pedido.state !== 'closed') return setPedido(null)\n            if (pedido.id === ped.id) setPedido(ped)\n        })\n    }, [pedidos])\n\n    useEffect(() => {\n        setPedido(null)\n    }, [typeSelected])\n\n    const expandedPedidosTypeSelect = () => {\n        if (pedidosExpanded) {\n            localStorage.setItem('pedidosExpanded', false)\n        } else {\n            localStorage.setItem('pedidosExpanded', true)\n        }\n        setPedidosExpanded(pedidosExpanded => !pedidosExpanded)\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem('pedidosExpanded')) return\n        if (localStorage.getItem('pedidosExpanded') === 'true') return setPedidosExpanded(true)\n        setPedidosExpanded(false)\n    }, [])\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Pedidos cerrados</h1>\n                <p>Encontrá los pedidos que fueron cerrados</p>\n            </div>\n            <Row>\n                <Col className='mb-3' lg={pedidosExpanded ? 3 : 1}>\n                    <Card className={`pedidos ${pedidosExpanded ? 'expanded' : 'notExpanded'}`}>\n                        <Card.Header>\n                            <div\n                                className={`d-flex w-100 ${pedidosExpanded ? 'justify-content-between' : 'justify-content-end'}`}\n                            >\n                                <span style={{ display: pedidosExpanded ? 'block' : 'none' }} className='cardTitleExpandable'>\n                                    Hacé clic para ver el listado de pedidos\n                                </span>\n                                <button\n                                    onClick={() => {\n                                        expandedPedidosTypeSelect()\n                                    }}\n                                    className='material-icons materialBtn'\n                                    title='Contraer tarjeta'\n                                >\n                                    chevron_right\n                                </button>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className='allTypes'>\n                                {pedidosType.map((type, i) => {\n                                    return (\n                                        <div\n                                            key={i}\n                                            className={`allType ${typeSelected === type.id ? 'active' : ''}`}\n                                            onClick={() => handleTypes(type.id)}\n                                        >\n                                            <span className='material-icons'>{type.icon}</span>\n                                            <div className='allTypes-info'>\n                                                <p>{type.name}</p>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col lg={pedidosExpanded ? 9 : 11} className='mb-3'>\n                    {typeSelected && (\n                        <Card>\n                            <Card.Header>\n                                {typeSelected === 'disenio'\n                                    ? 'Pedidos de Diseño'\n                                    : typeSelected === 'web'\n                                    ? 'Pedido Web GCBA'\n                                    : typeSelected === 'redes'\n                                    ? 'Pedido de publicación en Redes'\n                                    : typeSelected === 'somos' && 'Noticia para Somos'}\n                            </Card.Header>\n                            <Card.Body>\n                                <Table responsive='sm' bordered hover className='pedidosList'>\n                                    {typeSelected === 'disenio' ? (\n                                        <PedidosListDisenio pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : typeSelected === 'web' ? (\n                                        <PedidosListWeb pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : typeSelected === 'redes' ? (\n                                        <PedidosListRedes pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : (\n                                        typeSelected === 'somos' && (\n                                            <PedidosListSomos pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                        )\n                                    )}\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {pedido ? (\n                <Card className='pedidosListDetailsCard'>\n                    <Card.Header>\n                        <span className='material-icons pedidosListDetailsCardDismiss' onClick={() => setPedido(null)}>\n                            cancel\n                        </span>\n                        Detalles del pedido\n                    </Card.Header>\n                    <Card.Body>\n                        <PedidoDetailsAutor pedido={pedido} />\n                        <Table bordered hover responsive='sm' className='w-auto pedidoDetails'>\n                            {pedido.pedido === 'disenio' ? (\n                                <PedidoDetailsDisenio pedido={pedido} />\n                            ) : pedido.pedido === 'redes' ? (\n                                <PedidoDetailsRedes pedido={pedido} />\n                            ) : pedido.pedido === 'web' ? (\n                                <PedidoDetailsWeb pedido={pedido} />\n                            ) : (\n                                pedido.pedido === 'somos' && <PedidoDetailsSomos pedido={pedido} />\n                            )}\n                        </Table>\n                        <PedidosDetailsState pedido={pedido} />\n\n                        <Button as={Link} to={`/pedido/${pedido.id}`}>\n                            Ver en página completa\n                        </Button>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </Container>\n    )\n}\n\nexport default PedidosCerrados\n","import React from 'react'\nimport { Switch } from 'react-router-dom'\nimport AuthRoute from '../../HOC/AuthRoute'\nimport Cuenta from './Cuenta'\nimport EditarEquipo from './EditarEquipo'\nimport Home from './Home'\nimport Pedidos from './Pedidos'\nimport EditarDescargas from './EditarDescargas'\nimport CrearUsuario from './CrearUsuario'\nimport Pedido from './Pedido'\nimport PedidosCerrados from './PedidosCerrados'\nimport NotFound from '../NotFound'\n\nconst Admin = () => {\n    return (\n        <Switch>\n            <AuthRoute exact path='/' comp={Home} />\n            <AuthRoute exact path='/pedidos' comp={Pedidos} />\n            <AuthRoute exact path='/cuenta' comp={Cuenta} />\n            <AuthRoute exact path='/crear-usuario' comp={CrearUsuario} />\n            <AuthRoute exact path='/editar-equipo' comp={EditarEquipo} />\n            <AuthRoute exact path='/editar-descargables' comp={EditarDescargas} />\n            <AuthRoute exact path='/pedido/:id' comp={Pedido} />\n            <AuthRoute exact path='/pedidos-cerrados' comp={PedidosCerrados} />\n            <AuthRoute component={NotFound} />\n        </Switch>\n    )\n}\n\nexport default Admin\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport AccountData from '../../Components/AccountData'\nimport CuentaUpdatePassword from '../../Components/CuentaUpdatePassword'\nimport CuentaUpdateData from '../../Components/CuentaUpdateData'\n\nconst Cuenta = () => {\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Cuenta</h1>\n                <h4>Configurá tu usuario</h4>\n            </div>\n            <Row>\n                <Col lg={5}>\n                    <AccountData hasLink={false} />\n                    <CuentaUpdatePassword />\n                </Col>\n                <Col lg={7}>\n                    <CuentaUpdateData />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cuenta\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { usePedidos } from '../../Context/PedidosContext'\nimport PedidosPreview from '../../Components/PedidosPreview'\nimport DescargasCard from '../../Components/DescargasCard'\nimport AccountData from '../../Components/AccountData'\nimport AutorsSnippet from '../../Components/AutorsSnippet'\n\nconst Home = () => {\n    const { pedidos } = usePedidos()\n\n    return (\n        <Container fluid as='main' className='home'>\n            <div className='mainIntro'>\n                <h1>Bienvenido a Pedilo YA 2.0</h1>\n                <h4>Creá y monitoreá los pedidos de tu área en tiempo real</h4>\n            </div>\n            <PedidosPreview pedidos={pedidos} />\n            <div className='homeQuote'>\n                <hr />\n                <h5>¡Estamos mejorando la dinamica de nuestra comunicación!</h5>\n                <p>\n                    A través de esta plataforma pedí diseños, publicaciones en redes, noticias web y hacenos llegar tus novedades\n                    para Somos.\n                </p>\n                <p>\n                    <Link to='/descargables'>Consulta </Link>los manuales de marca y contenidos web de GCBA.\n                </p>\n                <p>\n                    Y conocé al <Link to='/equipo'>Equipo de Comunicación</Link> del Ministerio.{' '}\n                </p>\n                <hr />\n            </div>\n            <Row>\n                <Col md={4}>\n                    <AccountData hasLink={true} />\n                </Col>\n                <Col md={4}>\n                    <DescargasCard hasLink={true} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport DescargasCard from '../../Components/DescargasCard'\n\nconst Descargas = () => {\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Descargas</h1>\n                <p>Accedé a archivos que te pueden ser de utilidad</p>\n            </div>\n            <DescargasCard hasLink={false} />\n        </Container>\n    )\n}\n\nexport default Descargas\n","import { useState } from 'react'\nimport { useAuth } from '../Context/AuthContext'\nimport emailjs from 'emailjs-com'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nconst Suggestions = () => {\n    const { userName } = useAuth()\n\n    const serviceId = process.env.REACT_APP_API_YOUR_SERVICE_ID\n    const templateId = process.env.REACT_APP_API_YOUR_TEMPLATE_ID\n    const userId = process.env.REACT_APP_API_YOUR_USER_ID\n\n    const [suggestionMessage, setSuggestionMessage] = useState('')\n\n    const handleSuggestionMessage = value => {\n        setSuggestionMessage(value)\n    }\n\n    const handleSubmitSuggestion = e => {\n        let templateParams = {\n            message: suggestionMessage,\n            name: userName,\n        }\n        e.preventDefault()\n        emailjs.send(serviceId, templateId, templateParams, userId).then(\n            result => {\n                console.log(result.text)\n            },\n            error => {\n                console.log(error.text)\n            }\n        )\n        setSuggestionMessage('')\n    }\n\n    return (\n        <Card>\n            <Card.Header>\n                <span className='material-icons'>thumbs_up_down</span> Dejanos una sugerencia para la plataforma\n            </Card.Header>\n            <Card.Body>\n                <Form onSubmit={handleSubmitSuggestion}>\n                    <Form.Group className='formGroup'>\n                        <p className='mb-0'>¿Considerás que podemos mejorar algo de la plataforma?</p>\n                        <p className='mb-0'>¿Encontraste un error o bug?</p>\n                        <p>¡Avisanos!</p>\n                        <Form.Label>Mensaje:</Form.Label>\n                        <Form.Control\n                            value={suggestionMessage}\n                            onChange={e => handleSuggestionMessage(e.target.value)}\n                            as='textarea'\n                            style={{ height: '137px' }}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Button type='submit'>Enviar</Button>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Suggestions\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport EquipoCard from '../../Components/EquipoCard'\nimport Suggestions from '../../Components/Suggestions'\n\nconst Equipo = () => {\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Equipo</h1>\n                <p>Conocé al equipo de Comunicación del Ministerio de Gobierno</p>\n            </div>\n            <Row>\n                <Col xl={8}>\n                    <EquipoCard />\n                </Col>\n                <Col xl={4}>\n                    <Suggestions />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Equipo\n","import React, { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { Card } from 'react-bootstrap'\nimport { pedidosType } from '../Assets/data'\nimport { useCrearPedido } from '../Context/CrearPedidoContext'\n\nconst CrearPedidoType = () => {\n    const { handlePedidoType, pedidoType } = useCrearPedido()\n\n    const location = useLocation()\n    useEffect(() => {\n        if (!location.search) return\n        const search = location.search.replace('?', '')\n        const searchFullType = pedidosType.find(type => type.id === search && type)\n        handlePedidoType(searchFullType)\n        return () => {\n            handlePedidoType(null)\n        }\n    }, [])\n\n    return (\n        <Card>\n            <Card.Header>Tipo de solicitud</Card.Header>\n            <Card.Body>\n                {pedidosType.map(type => {\n                    return (\n                        <div\n                            key={type.id}\n                            className={`allType ${pedidoType?.id === type.id ? 'active' : ''}`}\n                            onClick={() => handlePedidoType(type)}\n                        >\n                            <span className='material-icons'>{type.icon}</span>\n                            <div className='allTypes-info'>\n                                <p>{type.name}</p>\n                                <p>{type.description}</p>\n                            </div>\n                        </div>\n                    )\n                })}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CrearPedidoType\n","import React, { lazy, Suspense } from 'react'\nimport { Col, Card } from 'react-bootstrap'\nimport Loading from './Loading'\n\nconst CrearPedidoInnerDisenio = lazy(() => import('./CrearPedidoInnerDisenio'))\nconst CrearPedidoInnerWeb = lazy(() => import('./CrearPedidoInnerWeb'))\nconst CrearPedidoInnerRedes = lazy(() => import('./CrearPedidoInnerRedes'))\nconst CrearPedidoInnerSomos = lazy(() => import('./CrearPedidoInnerSomos'))\n\nconst CrearPedidoInnerType = ({ pedidoType }) => {\n    return (\n        <Col lg={9}>\n            <Card className='secondsStep'>\n                <Card.Header>{pedidoType.name}</Card.Header>\n                <Card.Body>\n                    <Suspense fallback={<Loading />}>\n                        {pedidoType.id === 'disenio' && <CrearPedidoInnerDisenio />}\n                        {pedidoType.id === 'web' && <CrearPedidoInnerWeb />}\n                        {pedidoType.id === 'redes' && <CrearPedidoInnerRedes />}\n                        {pedidoType.id === 'somos' && <CrearPedidoInnerSomos />}\n                    </Suspense>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default CrearPedidoInnerType\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useCrearPedido } from '../../Context/CrearPedidoContext'\nimport CrearPedidoType from '../../Components/CrearPedidoType'\nimport CrearPedidoInnerType from '../../Components/CrearPedidoInnerType'\n\nimport { TeamNotificationsProvider } from '../../Context/TeamNotificationsContext'\n\nconst CrearPedido = () => {\n    const { pedidoType } = useCrearPedido()\n\n    return (\n        <TeamNotificationsProvider>\n            <Container fluid as='main'>\n                <div className='mainIntro'>\n                    <h1>Crear pedido</h1>\n                    <p>Creá una solicitud para el equipo de comunicación</p>\n                </div>\n                <Row>\n                    <Col className='mb-3' lg={3}>\n                        <CrearPedidoType />\n                    </Col>\n\n                    {pedidoType && <CrearPedidoInnerType pedidoType={pedidoType} />}\n                </Row>\n            </Container>\n        </TeamNotificationsProvider>\n    )\n}\n\nexport default CrearPedido\n","import React, { useState, useEffect } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { usePedidos } from '../../Context/PedidosContext'\nimport { Container, Card, Row, Col, Table, Button } from 'react-bootstrap'\nimport { pedidosType } from '../../Assets/data'\nimport PedidosListDisenio from '../../Components/PedidosListDisenio'\nimport PedidosListWeb from '../../Components/PedidosListWeb'\nimport PedidosListRedes from '../../Components/PedidosListRedes'\nimport PedidosListSomos from '../../Components/PedidosListSomos'\nimport PedidoDetailsAutor from '../../Components/PedidoDetailsAutor'\nimport PedidoDetailsDisenio from '../../Components/PedidoDetailsDisenio'\nimport PedidoDetailsWeb from '../../Components/PedidoDetailsWeb'\nimport PedidoDetailsRedes from '../../Components/PedidoDetailsRedes'\nimport PedidoDetailsSomos from '../../Components/PedidoDetailsSomos'\nimport PedidosDetailsState from '../../Components/PedidosDetailsState'\n\nconst Pedidos = () => {\n    const { pedidos } = usePedidos()\n\n    const [typeSelected, setTypeSelected] = useState(null)\n    const [pedido, setPedido] = useState(null)\n    const [pedidosExpanded, setPedidosExpanded] = useState(true)\n\n    const handleTypes = type => {\n        if (type === typeSelected) return setTypeSelected(null)\n        setTypeSelected(type)\n    }\n\n    const selectPedido = pedido => {\n        setPedido(pedido)\n    }\n\n    useEffect(() => {\n        if (!pedido) return\n        pedidos.map(ped => {\n            if (pedido.state === 'closed') return setPedido(null)\n            if (pedido.id === ped.id) setPedido(ped)\n        })\n    }, [pedidos])\n\n    useEffect(() => {\n        setPedido(null)\n    }, [typeSelected])\n\n    const location = useLocation()\n    useEffect(() => {\n        if (!location.search) return\n        const search = location.search.replace('?', '')\n        setTypeSelected(search)\n    }, [location])\n\n    useEffect(() => {\n        setPedido(null)\n    }, [typeSelected])\n\n    const expandedPedidosTypeSelect = () => {\n        if (pedidosExpanded) {\n            localStorage.setItem('pedidosExpanded', false)\n        } else {\n            localStorage.setItem('pedidosExpanded', true)\n        }\n        setPedidosExpanded(pedidosExpanded => !pedidosExpanded)\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem('pedidosExpanded')) return\n        if (localStorage.getItem('pedidosExpanded') === 'true') return setPedidosExpanded(true)\n        setPedidosExpanded(false)\n    }, [])\n\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Pedidos</h1>\n                <p>Todos los pedidos de tu área en un mismo lugar</p>\n            </div>\n            <Row>\n                <Col className='mb-3' lg={pedidosExpanded ? 3 : 1}>\n                    <Card className={`pedidos ${pedidosExpanded ? 'expanded' : 'notExpanded'}`}>\n                        <Card.Header>\n                            <div\n                                className={`d-flex w-100 ${pedidosExpanded ? 'justify-content-between' : 'justify-content-end'}`}\n                            >\n                                <span style={{ display: pedidosExpanded ? 'block' : 'none' }} className='cardTitleExpandable'>\n                                    Hacé clic para ver el listado de pedidos\n                                </span>\n                                <button\n                                    onClick={() => {\n                                        expandedPedidosTypeSelect()\n                                    }}\n                                    className='material-icons materialBtn'\n                                    title='Contraer tarjeta'\n                                >\n                                    chevron_right\n                                </button>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className='allTypes'>\n                                {pedidosType.map((type, i) => {\n                                    return (\n                                        <div\n                                            key={i}\n                                            className={`allType ${typeSelected === type.id ? 'active' : ''}`}\n                                            onClick={() => handleTypes(type.id)}\n                                        >\n                                            <span className='material-icons'>{type.icon}</span>\n                                            <div className='allTypes-info'>\n                                                <p>{type.name}</p>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col lg={pedidosExpanded ? 9 : 11} className='mb-3'>\n                    {typeSelected && (\n                        <Card>\n                            <Card.Header>\n                                {typeSelected === 'disenio'\n                                    ? 'Pedidos de Diseño'\n                                    : typeSelected === 'web'\n                                    ? 'Pedido Web GCBA'\n                                    : typeSelected === 'redes'\n                                    ? 'Pedido de publicación en Redes'\n                                    : typeSelected === 'somos' && 'Noticia para Somos'}\n                            </Card.Header>\n                            <Card.Body>\n                                <Table responsive='sm' bordered hover className='pedidosList'>\n                                    {typeSelected === 'disenio' ? (\n                                        <PedidosListDisenio pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={true} />\n                                    ) : typeSelected === 'web' ? (\n                                        <PedidosListWeb pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={true} />\n                                    ) : typeSelected === 'redes' ? (\n                                        <PedidosListRedes pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={true} />\n                                    ) : (\n                                        typeSelected === 'somos' && (\n                                            <PedidosListSomos pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={true} />\n                                        )\n                                    )}\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {pedido ? (\n                <Card className='pedidosListDetailsCard'>\n                    <Card.Header>\n                        <span className='material-icons pedidosListDetailsCardDismiss' onClick={() => setPedido(null)}>\n                            cancel\n                        </span>\n                        Detalles del pedido\n                    </Card.Header>\n                    <Card.Body>\n                        <PedidoDetailsAutor pedido={pedido} />\n                        <Table bordered hover responsive='sm' className='w-auto pedidoDetails'>\n                            {pedido.pedido === 'disenio' ? (\n                                <PedidoDetailsDisenio pedido={pedido} />\n                            ) : pedido.pedido === 'redes' ? (\n                                <PedidoDetailsRedes pedido={pedido} />\n                            ) : pedido.pedido === 'web' ? (\n                                <PedidoDetailsWeb pedido={pedido} />\n                            ) : (\n                                pedido.pedido === 'somos' && <PedidoDetailsSomos pedido={pedido} />\n                            )}\n                        </Table>\n                        <PedidosDetailsState pedido={pedido} />\n                        {/* <AsignPedidos pedido={pedido} /> */}\n                        <Button as={Link} to={`/pedido/${pedido.id}`}>\n                            Ver en página completa\n                        </Button>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </Container>\n    )\n}\n\nexport default Pedidos\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { Container } from 'react-bootstrap'\nimport { usePedidos } from '../../Context/PedidosContext'\nimport Loading from '../../Components/Loading'\nimport PedidoDetails from '../../Components/PedidoDetails'\n\nconst Pedido = () => {\n    const { pedidos } = usePedidos()\n    const [pedido, setPedido] = useState(null)\n\n    const params = useParams()\n\n    useEffect(() => {\n        setPedido(pedidos.find(p => params.id === p.id))\n    }, [params.id, pedidos])\n\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Detalles del Pedido</h1>\n            </div>\n\n            {!pedido ? <Loading /> : <PedidoDetails pedido={pedido} />}\n        </Container>\n    )\n}\n\nexport default Pedido\n","import React, { useState, useEffect } from 'react'\nimport { useAllPedidos } from '../../Context/AllPedidosContext'\nimport { Link } from 'react-router-dom'\nimport { Container, Card, Row, Col, Table, Button } from 'react-bootstrap'\nimport { pedidosType } from '../../Assets/data'\nimport PedidosListDisenio from '../../Components/PedidosListDisenio'\nimport PedidosListWeb from '../../Components/PedidosListWeb'\nimport PedidosListRedes from '../../Components/PedidosListRedes'\nimport PedidosListSomos from '../../Components/PedidosListSomos'\nimport PedidoDetailsAutor from '../../Components/PedidoDetailsAutor'\nimport PedidoDetailsDisenio from '../../Components/PedidoDetailsDisenio'\nimport PedidoDetailsWeb from '../../Components/PedidoDetailsWeb'\nimport PedidoDetailsRedes from '../../Components/PedidoDetailsRedes'\nimport PedidoDetailsSomos from '../../Components/PedidoDetailsSomos'\nimport PedidosDetailsState from '../../Components/PedidosDetailsState'\nconst PedidosCerrados = () => {\n    const { pedidos } = useAllPedidos()\n\n    const [typeSelected, setTypeSelected] = useState(null)\n    const [pedido, setPedido] = useState(null)\n    const [pedidosExpanded, setPedidosExpanded] = useState(true)\n\n    const handleTypes = type => {\n        if (type === typeSelected) return setTypeSelected(null)\n        setTypeSelected(type)\n    }\n\n    const selectPedido = pedido => {\n        setPedido(pedido)\n    }\n\n    useEffect(() => {\n        if (!pedido) return\n        pedidos.map(ped => {\n            if (pedido.state !== 'closed') return setPedido(null)\n            if (pedido.id === ped.id) setPedido(ped)\n        })\n    }, [pedidos])\n\n    useEffect(() => {\n        setPedido(null)\n    }, [typeSelected])\n\n    const expandedPedidosTypeSelect = () => {\n        if (pedidosExpanded) {\n            localStorage.setItem('pedidosExpanded', false)\n        } else {\n            localStorage.setItem('pedidosExpanded', true)\n        }\n        setPedidosExpanded(pedidosExpanded => !pedidosExpanded)\n    }\n\n    useEffect(() => {\n        if (!localStorage.getItem('pedidosExpanded')) return\n        if (localStorage.getItem('pedidosExpanded') === 'true') return setPedidosExpanded(true)\n        setPedidosExpanded(false)\n    }, [])\n    return (\n        <Container fluid as='main'>\n            <div className='mainIntro'>\n                <h1>Pedidos cerrados</h1>\n                <p>Encontrá los pedidos que fueron cerrados</p>\n            </div>\n            <Row>\n                <Col className='mb-3' lg={pedidosExpanded ? 3 : 1}>\n                    <Card className={`pedidos ${pedidosExpanded ? 'expanded' : 'notExpanded'}`}>\n                        <Card.Header>\n                            <div\n                                className={`d-flex w-100 ${pedidosExpanded ? 'justify-content-between' : 'justify-content-end'}`}\n                            >\n                                <span style={{ display: pedidosExpanded ? 'block' : 'none' }} className='cardTitleExpandable'>\n                                    Hacé clic para ver el listado de pedidos\n                                </span>\n                                <button\n                                    onClick={() => {\n                                        expandedPedidosTypeSelect()\n                                    }}\n                                    className='material-icons materialBtn'\n                                    title='Contraer tarjeta'\n                                >\n                                    chevron_right\n                                </button>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className='allTypes'>\n                                {pedidosType.map((type, i) => {\n                                    return (\n                                        <div\n                                            key={i}\n                                            className={`allType ${typeSelected === type.id ? 'active' : ''}`}\n                                            onClick={() => handleTypes(type.id)}\n                                        >\n                                            <span className='material-icons'>{type.icon}</span>\n                                            <div className='allTypes-info'>\n                                                <p>{type.name}</p>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col lg={pedidosExpanded ? 9 : 11} className='mb-3'>\n                    {typeSelected && (\n                        <Card>\n                            <Card.Header>\n                                {typeSelected === 'disenio'\n                                    ? 'Pedidos de Diseño'\n                                    : typeSelected === 'web'\n                                    ? 'Pedido Web GCBA'\n                                    : typeSelected === 'redes'\n                                    ? 'Pedido de publicación en Redes'\n                                    : typeSelected === 'somos' && 'Noticia para Somos'}\n                            </Card.Header>\n                            <Card.Body>\n                                <Table responsive='sm' bordered hover className='pedidosList'>\n                                    {typeSelected === 'disenio' ? (\n                                        <PedidosListDisenio pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : typeSelected === 'web' ? (\n                                        <PedidosListWeb pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : typeSelected === 'redes' ? (\n                                        <PedidosListRedes pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                    ) : (\n                                        typeSelected === 'somos' && (\n                                            <PedidosListSomos pedidos={pedidos} selectPedido={selectPedido} pedidosOpen={false} />\n                                        )\n                                    )}\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {pedido ? (\n                <Card className='pedidosListDetailsCard'>\n                    <Card.Header>\n                        <span className='material-icons pedidosListDetailsCardDismiss' onClick={() => setPedido(null)}>\n                            cancel\n                        </span>\n                        Detalles del pedido\n                    </Card.Header>\n                    <Card.Body>\n                        <PedidoDetailsAutor pedido={pedido} />\n                        <Table bordered hover responsive='sm' className='w-auto pedidoDetails'>\n                            {pedido.pedido === 'disenio' ? (\n                                <PedidoDetailsDisenio pedido={pedido} />\n                            ) : pedido.pedido === 'redes' ? (\n                                <PedidoDetailsRedes pedido={pedido} />\n                            ) : pedido.pedido === 'web' ? (\n                                <PedidoDetailsWeb pedido={pedido} />\n                            ) : (\n                                pedido.pedido === 'somos' && <PedidoDetailsSomos pedido={pedido} />\n                            )}\n                        </Table>\n                        <PedidosDetailsState pedido={pedido} />\n\n                        <Button as={Link} to={`/pedido/${pedido.id}`}>\n                            Ver en página completa\n                        </Button>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </Container>\n    )\n}\n\nexport default PedidosCerrados\n","import React from 'react'\nimport { Switch } from 'react-router-dom'\nimport AuthRoute from '../../HOC/AuthRoute'\nimport { CrearPedidoProvider } from '../../Context/CrearPedidoContext'\nimport { AutorsProviders } from '../../Context/AutorsContext'\n\nimport Cuenta from './Cuenta'\nimport Home from './Home'\nimport Descargas from './Descargas'\nimport Equipo from './Equipo'\nimport CrearPedido from './CrearPedido'\nimport Pedidos from './Pedidos'\nimport Pedido from './Pedido'\nimport PedidosCerrados from './PedidosCerrados'\nimport NotFound from '../NotFound'\n\nconst User = () => {\n    return (\n        <CrearPedidoProvider>\n            <AutorsProviders>\n                <Switch>\n                    <AuthRoute exact path='/' comp={Home} />\n                    <AuthRoute exact path='/pedidos' comp={Pedidos} />\n                    <AuthRoute exact path='/crear-pedidos' comp={CrearPedido} />\n                    <AuthRoute exact path='/cuenta' comp={Cuenta} />\n                    <AuthRoute exact path='/equipo' comp={Equipo} />\n                    <AuthRoute exact path='/descargables' comp={Descargas} />\n                    <AuthRoute exact path='/pedido/:id' comp={Pedido} />\n                    <AuthRoute exact path='/pedidos-cerrados' comp={PedidosCerrados} />\n                    <AuthRoute component={NotFound} />\n                </Switch>\n            </AutorsProviders>\n        </CrearPedidoProvider>\n    )\n}\n\nexport default User\n","import React, { useLayoutEffect } from 'react'\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom'\n\nimport { useAuth } from '../Context/AuthContext'\nimport AllMainProvider from '../Context/AllMainProvider'\n\nimport Login from './Login'\nimport NotFound from './NotFound'\n\nimport CustomSwitch from '../HOC/CustomSwitch'\nimport Admin from '../Views/Admin/Admin'\nimport User from '../Views/User/User'\n\nconst Main = () => {\n    const { loading, userType } = useAuth()\n\n    const location = useLocation()\n    useLayoutEffect(() => {\n        window.scrollTo(0, 0)\n    }, [location.pathname])\n\n    return loading ? (\n        'loading'\n    ) : (\n        <Switch>\n            <Route exact path='/login' component={Login} />\n            {userType ? (\n                <AllMainProvider>\n                    <CustomSwitch test={userType}>\n                        <Admin switchValue='admin' />\n                        <User switchValue='reparticion' />\n                    </CustomSwitch>\n                </AllMainProvider>\n            ) : (\n                <Redirect to='/login' />\n            )}\n            <Route component={NotFound} />\n        </Switch>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport { useAuth } from '../Context/AuthContext'\n\nconst Footer = () => {\n    const { currentUser } = useAuth()\n    return (\n        <>\n            {currentUser && (\n                <footer>\n                    <p className='mb-0'>Copyright© 2021. All right reserved.</p>\n                    <p className='mb-0'>Ministerio de Gobierno - GCBA</p>\n                    <p className='mb-0'>Powered by Google Firebase™</p>\n                    <p className='mb-0'>Created with ReactJs</p>\n                </footer>\n            )}\n        </>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { ThemeProvider } from '../StyleThemes/ThemeContext'\nimport { AuthProvider } from './AuthContext'\nimport { UserDataProvider } from './UserDataContext'\nimport { EquipoProvider } from './EquipoContext'\nimport { DescargasProvider } from './DescargasContext'\nimport { AsignPedidosProvider } from './AsignPedidosContext'\nimport { TimeAheadProvider } from './TimeAheadContext'\n\nconst AllAppProvider = ({ children }) => {\n    return (\n        <ThemeProvider>\n            <AuthProvider>\n                <UserDataProvider>\n                    <EquipoProvider>\n                        <DescargasProvider>\n                            <AsignPedidosProvider>\n                                <TimeAheadProvider>{children}</TimeAheadProvider>\n                            </AsignPedidosProvider>\n                        </DescargasProvider>\n                    </EquipoProvider>\n                </UserDataProvider>\n            </AuthProvider>\n        </ThemeProvider>\n    )\n}\n\nexport default AllAppProvider\n","import React, { useLayoutEffect } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport Navbar from './Static/Navbar'\nimport Main from './Views/Main'\nimport Footer from './Components/Footer'\nimport AllAppProvider from './Context/AllAppProvider'\n\nimport { UserDataProvider } from './Context/UserDataContext'\n\nconst App = () => {\n    return (\n        <AllAppProvider>\n            <Router basename={'/pediloya2.0'}>\n                <UserDataProvider>\n                    <Navbar />\n                    <Main />\n                    <Footer />\n                </UserDataProvider>\n            </Router>\n        </AllAppProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n/* , { StrictMode } */\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\n/* <StrictMode>\n    </StrictMode> */\n","import React, { createContext, useContext, useEffect, useState, useMemo } from 'react'\nimport { proyectAuth, googleProvider, linkWithRedirect, auth, signInWithRedirect, deleteUser, unlink } from '../firebase'\n/* import { useHistory } from 'react-router' */\n\nconst AuthContext = createContext()\n\nconst { Provider } = AuthContext\n\nexport const useAuth = () => {\n    return useContext(AuthContext)\n}\n\nexport const AuthProvider = ({ children }) => {\n    const [loading, setLoading] = useState(true)\n    const [currentUser, setCurrentUser] = useState()\n\n    /* CHECKS IF LOGED IN */\n    useEffect(() => {\n        const unsubscribe = proyectAuth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n        return unsubscribe\n    }, [])\n\n    /* SING UP FUNCTION */\n    function signup(email, password) {\n        return proyectAuth.createUserWithEmailAndPassword(email, password)\n    }\n\n    /* LOGIN FUNCTION */\n    function login(email, password) {\n        return proyectAuth.signInWithEmailAndPassword(email, password)\n    }\n\n    /* LOG OUT FUNCTION */\n    function logout() {\n        setLoading(true)\n        return proyectAuth.signOut()\n    }\n\n    const [googleLinkError, setGoogleLinkError] = useState('')\n    function connectGoogleAccount() {\n        linkWithRedirect(currentUser, googleProvider)\n            .then(msg => {\n                console.log(msg)\n            })\n            .catch(err => {\n                setGoogleLinkError('Esta cuenta ya está asociada a una cuenta de google')\n                console.log(err)\n            })\n    }\n\n    function signupWithGoogle() {\n        signInWithRedirect(auth, googleProvider)\n    }\n\n    const [unlinkSuccess, setUnlinkSucces] = useState(false)\n    function unLinkFromGoogle() {\n        console.log(currentUser)\n        let googleProviderId = currentUser.providerData.find(id => id.providerId === 'google.com')\n        console.log(googleProviderId.providerId)\n        unlink(currentUser, googleProviderId.providerId)\n            .then(msg => {\n                setUnlinkSucces(true)\n                console.log(msg)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            .then(() => {\n                setUnlinkSucces(false)\n            })\n    }\n\n    function deleteUserFution() {\n        deleteUser(currentUser)\n            .then(() => {\n                // User deleted.\n            })\n            .catch(error => {\n                // An error ocurred\n                // ...\n            })\n    }\n\n    /* UPDATE PASSWORD */\n    const [updatePasswordError, setUpdatePasswordError] = useState('')\n    const updatePassword = newPassword => {\n        currentUser\n            .updatePassword(newPassword)\n            .then(() => {\n                logout()\n            })\n            .catch(err => {\n                console.log(err)\n                setUpdatePasswordError(err.code)\n            })\n    }\n\n    const [userType, setUserType] = useState('')\n    const [userName, setUserName] = useState('')\n    const [userConfig, setUserConfig] = useState({})\n\n    const configs = useMemo(() => {\n        return {\n            adminConfig: { admin: true, creatUsers: true, seeRequest: 'all' },\n            equipoConfig: { admin: false, creatUsers: false, seeRequest: 'all' },\n            reparticionConfig: { admin: false, creatUsers: false, seeRequest: 'own' },\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!currentUser) return\n        let email = currentUser.email\n        let prevType = email.split('@')[1]\n        let type = email.split('@')[1].split('.')[1]\n        let name = email.split('@')[0]\n        let theConfig = `${type}Config`\n\n        if (prevType === 'gmail.com') {\n            alert(\n                'Solo es posible ingresar con Gmail si asociaste tu cuenta a una cuenta de Gmail, para esto ingresá primero con usuario y contraseña y asociá tu cuenta en el panel de Usuario'\n            )\n            deleteUserFution()\n            return logout()\n        }\n\n        setUserName(name)\n        setUserType(type)\n\n        setUserConfig(configs[theConfig])\n    }, [currentUser, setUserType, setUserConfig, setUserName, configs])\n\n    const value = {\n        loading,\n        currentUser,\n        userType,\n        userName,\n        userConfig,\n\n        signup,\n        login,\n        logout,\n        updatePassword,\n        updatePasswordError,\n        connectGoogleAccount,\n        signupWithGoogle,\n        googleLinkError,\n        setGoogleLinkError,\n        unLinkFromGoogle,\n        unlinkSuccess,\n    }\n\n    return <Provider value={value}>{!loading && children}</Provider>\n}\n","import firebase from 'firebase/compat/app'\nimport { getAuth, linkWithRedirect, GoogleAuthProvider, signInWithRedirect, deleteUser, unlink } from 'firebase/auth'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/storage'\nimport 'firebase/compat/firestore'\n\nconst apiKey = process.env.REACT_APP_API_KEY\nconst authDomain = process.env.REACT_APP_AUTH_DOMAIN\nconst projectId = process.env.REACT_APP_PROJECT_ID\nconst storageBucket = process.env.REACT_APP_STORAGE_BUCKET\nconst messagingSenderId = process.env.REACT_APP_MESSAGING_SENDER_ID\nconst appId = process.env.REACT_APP_APP_ID\n\nconst config = {\n    apiKey,\n    authDomain,\n    projectId,\n    storageBucket,\n    messagingSenderId,\n    appId,\n}\n\nfirebase.initializeApp(config)\n\nconst proyectAuth = firebase.auth()\nconst auth = getAuth()\nconst googleProvider = new GoogleAuthProvider()\nconst projectStorage = firebase.storage()\nconst projectFirestore = firebase.firestore()\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\n\nexport {\n    proyectAuth,\n    projectStorage,\n    projectFirestore,\n    timestamp,\n    auth,\n    linkWithRedirect,\n    googleProvider,\n    signInWithRedirect,\n    deleteUser,\n    unlink,\n}\n","import React from 'react'\nimport './loading.css'\n\nconst Loading = () => {\n    return (\n        <div className='loadingWrapper'>\n            <div className='loading'>\n                <div className='dot'></div>\n                <div className='dot'></div>\n                <div className='dot'></div>\n                <div className='dot'></div>\n                <div className='dot'></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import { useState, useEffect } from 'react'\nimport { projectFirestore, timestamp } from '../firebase'\nimport { useAuth } from '../Context/AuthContext'\n\nexport const useFirestoreColl = collection => {\n    const [coll, setColl] = useState([])\n    const { currentUser } = useAuth()\n\n    useEffect(() => {\n        if (!currentUser) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .orderBy('createAt', 'desc')\n            .onSnapshot(snap => {\n                if (snap.empty) return setColl([{ 'empty': true }])\n                let documents = []\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data() })\n                })\n                setColl(documents)\n            })\n\n        return () => unsub()\n    }, [collection, currentUser])\n\n    return { coll }\n}\n\nexport const useFirestoreDoc = (collection, document) => {\n    const [docs, setDocs] = useState([])\n    const { currentUser } = useAuth()\n\n    useEffect(() => {\n        if (!currentUser) return\n        if (!document || !collection) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .doc(document)\n            .onSnapshot(snap => {\n                snap.data() === undefined ? setDocs([]) : setDocs(snap.data())\n            })\n\n        return () => unsub()\n    }, [collection, document, currentUser])\n\n    return { docs }\n}\n\nexport const useFirestoreCollWhere = (collection, whereKey, whereValue) => {\n    const [docs, setDocs] = useState([])\n    const { currentUser } = useAuth()\n\n    useEffect(() => {\n        if (!currentUser) return\n        if (!collection || !whereKey || !whereValue) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .where(whereKey, '==', whereValue)\n            .orderBy('createAt', 'desc')\n            .onSnapshot(snap => {\n                let documents = []\n                if (snap.empty) return setDocs([{ 'empty': true }])\n                snap.forEach(doc => {\n                    documents.push(doc.data())\n                })\n                setDocs(documents)\n            })\n\n        return () => unsub()\n    }, [collection, whereValue, whereKey, currentUser])\n\n    return { docs }\n}\n\nexport const useFirestoreCollWhereNoOrder = (collection, whereKey, whereValue) => {\n    const [docs, setDocs] = useState([])\n    const { currentUser } = useAuth()\n\n    useEffect(() => {\n        if (!currentUser) return\n        if (!collection || !whereKey || !whereValue) return\n        const unsub = projectFirestore\n            .collection(collection)\n            .where(whereKey, '==', whereValue)\n            .onSnapshot(snap => {\n                let documents = []\n                if (snap.empty) return setDocs([{ 'empty': true }])\n                snap.forEach(doc => {\n                    documents.push(doc.data())\n                })\n                setDocs(documents)\n            })\n\n        return () => unsub()\n    }, [collection, whereValue, whereKey, currentUser])\n\n    return { docs }\n}\n\nexport const newDocument = async (collection, data, userId) => {\n    const createAt = timestamp()\n\n    const projectColection = projectFirestore.collection(collection)\n\n    return projectColection\n        .add({\n            ...data,\n            userId,\n            createAt,\n        })\n        .then(res => {\n            projectColection.doc(res.id).update({\n                id: res.id,\n            })\n        })\n        .catch(err => console.log(err))\n}\n\nexport const newDocumentCustomId = async (collection, document, data, userId) => {\n    const createAt = timestamp()\n\n    const projectColection = projectFirestore.collection(collection)\n    const projectDoc = projectColection.doc(document)\n    return projectDoc\n        .set({\n            ...data,\n            createAt,\n        })\n        .then(res => {\n            console.log(res)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const updateDocument = async (collection, data, docId) => {\n    const createAt = timestamp()\n\n    const projectColection = projectFirestore.collection(collection)\n    const projectDoc = projectColection.doc(docId)\n\n    return projectDoc\n        .update({\n            ...data,\n            createAt,\n        })\n        .then(res => {\n            console.log(res)\n        })\n        .catch(err => console.log(err))\n}\n\nexport const deleteDocument = async (collection, docId) => {\n    const projectColection = projectFirestore.collection(collection)\n    const projectDoc = projectColection.doc(docId)\n\n    return projectDoc\n        .delete()\n        .then(() => {\n            console.log('document deleted')\n        })\n        .catch(err => console.log(err))\n}\n","export const pedidosType = [\n    {\n        name: 'Diseño',\n        id: 'disenio',\n        iconType: 'material',\n        icon: `edit`,\n        description: 'Promocioná la gestión de tu área',\n        secondStep: [\n            { name: 'Pieza impresa', id: 'impresa', iconType: 'material', icon: `print` },\n            { name: 'Pieza digital', id: 'digital', iconType: 'material', icon: `image` },\n            { name: 'Ambas', id: 'ambas', iconType: 'material', icon: `done_all` },\n        ],\n    },\n    {\n        name: 'Web',\n        id: 'web',\n        iconType: 'material',\n        icon: `computer`,\n        description: 'Modificá o creá contenido',\n        secondStep: [\n            { name: 'Noticia Web', id: 'noticia', iconType: 'material', icon: 'feed' },\n            { name: 'Crear contenido', id: 'crear', iconType: 'material', icon: 'post_add' },\n            { name: 'Modificar contenido', id: 'modificar', iconType: 'material', icon: 'edit_note' },\n        ],\n    },\n    {\n        name: 'Redes',\n        id: 'redes',\n        iconType: 'material',\n        icon: `facebook`,\n        description: 'Compartí las novedades',\n        secondStep: [\n            { name: 'Facebook', id: 'facebook', iconType: 'custom', icon: 'facebook' },\n            { name: 'Twitter', id: 'twitter', iconType: 'custom', icon: 'twitter' },\n            { name: 'Ambas', id: 'ambas', iconType: 'material', icon: 'done_all' },\n        ],\n    },\n    {\n        name: 'Somos',\n        id: 'somos',\n        iconType: 'material',\n        icon: `email`,\n        description: 'Comunicá internamente',\n        secondStep: [\n            { name: 'Entre Nos', id: 'EntreNos', iconType: 'custom', icon: 'somos-entre_nos.svg' },\n            { name: 'No te lo pierdas', id: 'NoTeLoPierdas', iconType: 'custom', icon: 'somos-no_te_lo_pierdas.svg' },\n            { name: 'Te enteraste', id: 'TeEnteraste', iconType: 'custom', icon: 'somos-te_enteraste.svg' },\n        ],\n    },\n]\n\nexport const types = {\n    disenio: [\n        { name: 'Pieza impresa', id: 'impresa', iconType: 'material', icon: `print` },\n        { name: 'Pieza digital', id: 'digital', iconType: 'material', icon: `image` },\n        { name: 'Ambas', id: 'ambas', iconType: 'material', icon: `done_all` },\n    ],\n    web: [\n        { name: 'Noticia Web', id: 'noticia', iconType: 'material', icon: 'feed' },\n        { name: 'Crear contenido', id: 'crear', iconType: 'material', icon: 'post_add' },\n        { name: 'Modificar contenido', id: 'modificar', iconType: 'material', icon: 'edit_note' },\n    ],\n    redes: [\n        { name: 'Facebook', id: 'facebook', iconType: 'custom', icon: 'facebook' },\n        { name: 'Twitter', id: 'twitter', iconType: 'custom', icon: 'twitter' },\n        { name: 'Ambas', id: 'ambas', iconType: 'material', icon: 'done_all' },\n    ],\n    somos: [\n        { name: 'Entre Nos', id: 'EntreNos', iconType: 'custom', icon: 'somos-entre_nos.svg' },\n        { name: 'No te lo pierdas', id: 'NoTeLoPierdas', iconType: 'custom', icon: 'somos-no_te_lo_pierdas.svg' },\n        { name: 'Te enteraste', id: 'TeEnteraste', iconType: 'custom', icon: 'somos-te_enteraste.svg' },\n    ],\n}\n","import { useState } from 'react'\n\nconst useInput = initialValue => {\n    const [value, setValue] = useState(initialValue)\n\n    const reset = () => {\n        setValue(initialValue)\n    }\n\n    const bind = {\n        value,\n        onChange: e => {\n            setValue(e.target.value)\n        },\n    }\n\n    return [value, bind, reset]\n}\n\nexport default useInput\n","import { useState } from 'react'\n\nconst useToggle = initial => {\n    const [toggle, setToggle] = useState(initial)\n\n    const handleToggle = () => {\n        setToggle(toggle => !toggle)\n    }\n    const resetToggle = () => {\n        setToggle(initial)\n    }\n\n    return [toggle, handleToggle, resetToggle]\n}\n\nexport default useToggle\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { projectFirestore, timestamp } from '../firebase'\nimport { useAuth } from './AuthContext'\nimport { useHistory } from 'react-router'\nimport useInput from '../Hooks/useInput'\nimport useToggle from '../Hooks/useToggle'\n\nconst CrearPedidoContext = createContext()\n\nconst { Provider } = CrearPedidoContext\n\nexport const useCrearPedido = () => {\n    return useContext(CrearPedidoContext)\n}\n\nexport const CrearPedidoProvider = ({ children }) => {\n    const { currentUser, userName } = useAuth()\n\n    const [error, setError] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const [pedidoType, setPedidoType] = useState(null)\n    const [secondSelect, setSecondSelect] = useState(null)\n\n    const [toggle, setToggle, resetToggle] = useToggle(true)\n\n    /* ALL */\n    const [observaciones, bindObservaciones, resetObservaciones] = useInput('')\n    const [dayPicked, setDayPicked] = useState(null)\n    const [dayPickedFormated, setDayPickedFormated] = useState(null)\n    const handleDay = (day, formatedDay) => {\n        setDayPicked(day)\n        setDayPickedFormated(formatedDay)\n    }\n\n    /* diseño */\n    const [disenioSpecs, bindDisenioSpecs, resetDisenioSpecs] = useInput('')\n    const [disenioText, bindDisenioText, resetDisenioText] = useInput('')\n    const [disenioImg, bindDisenioImg, resetDisenioImg] = useInput('')\n\n    /* web (noticia y nuevo contenido) */\n    const [webTitle, bindWebTitle, resetWebTitle] = useInput('')\n    const [webDescription, bindWebDescription, resetWebDescription] = useInput('')\n    const [webBody, bindWebBody, resetWebBody] = useInput('')\n    const [webImg, bindWebImg, resetWebImg] = useInput('')\n    const [webLink, bindWebLink, resetWebLink] = useInput('')\n    /* web modificar */\n    const [webLinkToModify, bindLinkToModify, resetLinkToModify] = useInput('')\n    const [webChanges, bindWebChanges, resetWebChanges] = useInput('')\n\n    /* redes */\n    const [redesText, bindRedesText, resetRedesText] = useInput('')\n    const [redesImg, bindRedesImg, resetRedesImg] = useInput('')\n\n    /* somos */\n    const [somosTitle, bindSomosTitle, resetSomosTitle] = useInput('')\n    const [somosText, bindSomosText, resetSomosText] = useInput('')\n    const [somosImg, bindSomosImg, resetSomosImg] = useInput('')\n\n    const handlePedidoType = selected => {\n        if (selected === pedidoType) {\n            setSecondSelect(null)\n            return setPedidoType(null)\n        }\n        setPedidoType(selected)\n        setSecondSelect(null)\n    }\n\n    useEffect(() => {\n        return () => {\n            handlePedidoType(null)\n        }\n    }, [])\n\n    const handleSecondSelect = selected => {\n        if (selected === secondSelect) return setSecondSelect(null)\n        setSecondSelect(selected)\n    }\n    /* reset toggle when pedido type change */\n    useEffect(() => {\n        resetToggle()\n    }, [pedidoType])\n\n    /* resets inputs when changing inner types of request */\n    useEffect(() => {\n        if (!pedidoType) return\n        resetObservaciones()\n        resetToggle()\n        if (pedidoType.id === 'disenio') {\n            setDayPicked(null)\n            resetDisenioSpecs()\n            resetDisenioText()\n            return resetDisenioImg()\n        }\n        if (pedidoType.id === 'web') {\n            setDayPicked(null)\n            resetWebTitle()\n            resetWebDescription()\n            resetWebBody()\n            resetWebImg()\n            resetWebLink()\n            resetLinkToModify()\n            return resetWebChanges()\n        }\n        if (pedidoType.id === 'redes') {\n            setDayPicked(null)\n            resetRedesText()\n            return resetRedesImg()\n        }\n        if (pedidoType.id === 'somos') {\n            setDayPicked(null)\n            resetSomosText()\n            return resetSomosImg()\n        }\n    }, [secondSelect])\n\n    /* reset inputs when toggle */\n    useEffect(() => {\n        if (!pedidoType) return\n        if (pedidoType.id === 'disenio') return resetDisenioText()\n        if (pedidoType.id === 'web') {\n            resetWebTitle()\n            resetWebDescription()\n            resetWebBody()\n            return resetWebLink()\n        }\n        if (pedidoType.id === 'redes') return resetRedesText()\n        if (pedidoType.id === 'somos') {\n            resetSomosText()\n            return resetSomosTitle()\n        }\n    }, [toggle])\n\n    /* error handeling when a day is pick */\n    useEffect(() => {\n        setError('')\n    }, [dayPicked])\n\n    const handleNewPedidoDisenio = async autor => {\n        if (!dayPicked) return setError('Seleccioná una fecha')\n        setUploading(true)\n        const data = {\n            pedido: 'disenio',\n            area: userName,\n            type: secondSelect.id,\n            specs: disenioSpecs,\n            text: disenioText,\n            img: disenioImg,\n            date: dayPicked,\n            formatedDate: dayPickedFormated,\n            observaciones,\n            autor: autor,\n            empty: false,\n            state: 'created',\n        }\n        const userId = currentUser.uid\n        try {\n            setError('')\n            newDocumentPedido('pedidos', data, userId)\n        } catch {\n            setError('error')\n        }\n        return\n    }\n\n    const handleNewPedidoWeb = async autor => {\n        if (!dayPicked) return setError('Seleccioná una fecha')\n        setUploading(true)\n        if (webLinkToModify || webChanges) {\n            /* modificar  */\n            if (webChanges) {\n                let data = {\n                    pedido: 'web',\n                    area: userName,\n                    type: secondSelect.id,\n                    webToModify: webLinkToModify,\n                    changes: webChanges,\n                    img: webImg,\n                    date: dayPicked,\n                    formatedDate: dayPickedFormated,\n                    observaciones,\n                    autor: autor,\n                    state: 'created',\n                }\n                const userId = currentUser.uid\n                try {\n                    setError('')\n                    newDocumentPedido('pedidos', data, userId)\n                } catch {\n                    setError('error')\n                }\n                return\n            }\n            if (webLink) {\n                let data = {\n                    pedido: 'web',\n                    area: userName,\n                    type: secondSelect.id,\n                    webToModify: webLinkToModify,\n                    changes: webLink,\n                    img: webImg,\n                    date: dayPicked,\n                    fomartedDate: dayPickedFormated,\n                    observaciones,\n                    autor: autor,\n                    state: 'created',\n                }\n                const userId = currentUser.uid\n                try {\n                    setError('')\n                    newDocumentPedido('pedidos', data, userId)\n                } catch {\n                    setError('error')\n                }\n                return\n            }\n        }\n        if (webLink) {\n            /* noticia o nuevo contenido con link */\n            let data = {\n                area: userName,\n                pedido: 'web',\n                type: secondSelect.id,\n                linkToContent: webLink,\n                img: webImg,\n                date: dayPicked,\n                formatedDate: dayPickedFormated,\n                observaciones,\n                autor: autor,\n                state: 'created',\n            }\n            const userId = currentUser.uid\n\n            try {\n                setError('')\n                newDocumentPedido('pedidos', data, userId)\n            } catch {\n                setError('error')\n            }\n            return\n        }\n        let data = {\n            /* noticia o nuevo contenido con campos */\n            area: userName,\n            pedido: 'web',\n            type: secondSelect.id,\n            title: webTitle,\n            description: webDescription,\n            body: webBody,\n            img: webImg,\n            date: dayPicked,\n            formatedDate: dayPickedFormated,\n            observaciones,\n            autor: autor,\n            state: 'created',\n        }\n        const userId = currentUser.uid\n        try {\n            setError('')\n            newDocumentPedido('pedidos', data, userId)\n        } catch {\n            setError('error')\n        }\n        return\n    }\n\n    const handleNewPedidoRedes = async autor => {\n        setUploading(true)\n        const data = {\n            pedido: 'redes',\n            area: userName,\n            type: secondSelect.id,\n            text: redesText,\n            img: redesImg,\n            date: dayPicked,\n            formatedDate: dayPickedFormated,\n            observaciones,\n            autor: autor,\n            state: 'created',\n        }\n        const userId = currentUser.uid\n        try {\n            setError('')\n            newDocumentPedido('pedidos', data, userId)\n        } catch {\n            setError('error')\n        }\n        return\n    }\n\n    const handleNewPedidoSomos = async autor => {\n        setUploading(true)\n        if (somosTitle) {\n            const data = {\n                pedido: 'somos',\n                area: userName,\n                type: secondSelect.id,\n                title: somosTitle,\n                text: somosText,\n                img: somosImg,\n                observaciones,\n                autor: autor,\n                state: 'created',\n            }\n            const userId = currentUser.uid\n\n            try {\n                setError('')\n                newDocumentPedido('pedidos', data, userId)\n            } catch {\n                setError('error')\n            }\n            return\n        }\n        const data = {\n            pedido: 'somos',\n            area: userName,\n            type: secondSelect.id,\n            text: somosText,\n            img: somosImg,\n            observaciones,\n            autor: autor,\n            state: 'created',\n        }\n        const userId = currentUser.uid\n        try {\n            setError('')\n            newDocumentPedido('pedidos', data, userId)\n        } catch {\n            setError('error')\n        }\n    }\n\n    const history = useHistory()\n    const [id, setId] = useState(null)\n    const newDocumentPedido = async (collection, data, userId) => {\n        const createAt = timestamp()\n\n        const projectColection = projectFirestore.collection(collection)\n\n        return projectColection\n            .add({\n                ...data,\n                userId,\n                createAt,\n            })\n            .then(res => {\n                setId(res.id)\n                projectColection.doc(res.id).update({\n                    id: res.id,\n                })\n                setUploading(false)\n                history.push(`/pedido/${res.id}`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const value = {\n        uploading,\n\n        handlePedidoType,\n        pedidoType,\n        secondSelect,\n        handleSecondSelect,\n        error,\n\n        bindObservaciones,\n        handleDay,\n        dayPickedFormated,\n\n        toggle,\n        setToggle,\n\n        bindDisenioSpecs,\n        bindDisenioText,\n        bindDisenioImg,\n        handleNewPedidoDisenio,\n\n        bindWebTitle,\n        bindWebDescription,\n        bindWebBody,\n        bindWebImg,\n        bindWebLink,\n        bindLinkToModify,\n        bindWebChanges,\n        handleNewPedidoWeb,\n\n        bindRedesText,\n        bindRedesImg,\n        handleNewPedidoRedes,\n\n        bindSomosTitle,\n        bindSomosText,\n        bindSomosImg,\n        handleNewPedidoSomos,\n    }\n    return <Provider value={value}>{children}</Provider>\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { useFirestoreDoc, newDocumentCustomId, updateDocument } from '../Hooks/useFirestore'\nimport { useAuth } from './AuthContext'\n\nconst AutorsContext = createContext()\n\nconst { Provider } = AutorsContext\n\nexport const useAutors = () => {\n    return useContext(AutorsContext)\n}\n\nexport const AutorsProviders = ({ children }) => {\n    const { currentUser } = useAuth()\n\n    const [nameToggle, setNameToggle] = useState(false)\n    const [emailToggle, setEmailToggle] = useState(false)\n    const [emailCopyToggle, setEmailCopyToggle] = useState(false)\n\n    const [autorName, setAutorName] = useState('')\n    const [autorEmail, setAutorEmail] = useState('')\n\n    const [emailsToCopy, setEmailsToCopy] = useState('')\n    const [emailsToCopyArray, setEmailsToCopyArray] = useState([])\n\n    const handleEmailsToCopy = e => {\n        setEmailsToCopy(e.target.value)\n    }\n    const handleEmailsToCopyArray = e => {\n        const { key } = e\n        const trimmedInput = emailsToCopy.trim()\n        const duplicate = emailsToCopyArray.includes(emailsToCopy)\n        const empty = ''\n        if (key === ',' || key === ' ') {\n            if (duplicate || trimmedInput === empty) {\n                e.preventDefault()\n                return setEmailsToCopy('')\n            }\n            e.preventDefault()\n            setEmailsToCopyArray(prevState => [...prevState, trimmedInput])\n            setEmailsToCopy('')\n        }\n    }\n\n    const deleteFromCopyArray = index => {\n        setEmailsToCopyArray(prevState => prevState.filter((tag, i) => i !== index))\n    }\n\n    const resetEmailsToCopy = () => {\n        setEmailsToCopy('')\n    }\n\n    const handleAutorName = e => {\n        setAutorName(e.target.value)\n    }\n    const resetAutorName = () => {\n        setAutorName('')\n    }\n    const handleAutorEmail = e => {\n        setAutorEmail(e.target.value)\n    }\n    const resetAutorEmail = () => {\n        setAutorEmail('')\n    }\n\n    const { docs } = useFirestoreDoc('autors', `${currentUser?.uid}-autors`)\n    const [autors, setAutors] = useState(null)\n\n    useEffect(() => {\n        setAutors(docs)\n    }, [docs])\n\n    const handleNewAutor = autor => {\n        const { autorName, autorEmail, emailsToCopy } = autor\n        if (autors) {\n            let data = {\n                autorName: autors.autorName.includes(autorName) ? autors.autorName : [...autors.autorName, autorName],\n                autorEmail: autors.autorEmail.includes(autorEmail) ? autors.autorEmail : [...autors.autorEmail, autorEmail],\n                emailsToCopy: [...autors.emailsToCopy.filter(val => !emailsToCopy.includes(val)), ...emailsToCopy],\n                userId: currentUser.uid,\n            }\n            return updateDocument('autors', data, `${currentUser.uid}-autors`)\n        }\n        let data = {\n            autorName: [autorName],\n            autorEmail: [autorEmail],\n            emailsToCopy,\n            userId: currentUser.uid,\n        }\n        newDocumentCustomId('autors', `${currentUser.uid}-autors`, data, currentUser.uid)\n    }\n\n    const deleteName = name => {\n        let autorsName = autors.autorName\n        let index = autorsName.indexOf(name)\n        if (index > -1) autorsName.splice(index, 1)\n\n        let data = {\n            autorName: autorsName,\n            autorEmail: autors.autorEmail,\n            emailsToCopy: autors.emailsToCopy,\n            userId: currentUser.uid,\n        }\n\n        return newDocumentCustomId('autors', `${currentUser.uid}-autors`, data, currentUser.uid)\n    }\n    const deleteEmail = email => {\n        let autorsEmail = autors.autorEmail\n        let index = autorsEmail.indexOf(email)\n        if (index > -1) autorsEmail.splice(index, 1)\n\n        let data = {\n            autorName: autors.autorName,\n            autorEmail: autorsEmail,\n            emailsToCopy: autors.emailsToCopy,\n            userId: currentUser.uid,\n        }\n\n        return newDocumentCustomId('autors', `${currentUser.uid}-autors`, data, currentUser.uid)\n    }\n    const deleteEmailCopy = emailCopy => {\n        let autorsEmailCopy = autors.emailsToCopy\n        let index = autorsEmailCopy.indexOf(emailCopy)\n        if (index > -1) autorsEmailCopy.splice(index, 1)\n\n        let data = {\n            autorName: autors.autorName,\n            autorEmail: autors.autorEmail,\n            emailsToCopy: autorsEmailCopy,\n            userId: currentUser.uid,\n        }\n\n        return newDocumentCustomId('autors', `${currentUser.uid}-autors`, data, currentUser.uid)\n    }\n\n    const value = {\n        nameToggle,\n        setNameToggle,\n        emailToggle,\n        setEmailToggle,\n        emailCopyToggle,\n        setEmailCopyToggle,\n\n        autorName,\n        setAutorName,\n        autorEmail,\n        setAutorEmail,\n\n        handleAutorName,\n        handleAutorEmail,\n        resetAutorName,\n        resetAutorEmail,\n\n        emailsToCopyArray,\n        emailsToCopy,\n\n        resetEmailsToCopy,\n        handleEmailsToCopy,\n        handleEmailsToCopyArray,\n        deleteFromCopyArray,\n        setEmailsToCopy,\n        setEmailsToCopyArray,\n\n        autors,\n        handleNewAutor,\n\n        deleteName,\n        deleteEmail,\n        deleteEmailCopy,\n    }\n\n    return <Provider value={value}>{children}</Provider>\n}\n","import React, { useState, useEffect, createContext, useContext } from 'react'\nimport { projectFirestore } from '../firebase'\nimport { useAuth } from './AuthContext'\n\nconst TimeAheadContext = createContext()\n\nconst { Provider } = TimeAheadContext\n\nexport const useTimeAhead = () => {\n    return useContext(TimeAheadContext)\n}\n\nexport const TimeAheadProvider = ({ children }) => {\n    const { currentUser } = useAuth()\n\n    const [timeAheadWeb, setTimeAheadWeb] = useState(0)\n    const [timeAheadRedes, setTimeAheadRedes] = useState(0)\n    const [timeAheaDisenio, setTimeAheaDisenio] = useState(0)\n    const [timeaheadId, setTimeaheadId] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [successMess, setSuccessMess] = useState('')\n\n    useEffect(() => {\n        if (!currentUser) return\n\n        const unsub = projectFirestore.collection('timeahead').onSnapshot(snap => {\n            snap.forEach(doc => {\n                setTimeaheadId(doc.id)\n                setTimeAheadWeb(doc.data().web)\n                setTimeAheadRedes(doc.data().redes)\n                setTimeAheaDisenio(doc.data().disenio)\n            })\n        })\n\n        return () => unsub()\n    }, [currentUser])\n\n    const changeTimeAhead = async data => {\n        const projectColection = projectFirestore.collection('timeahead')\n        const projectDoc = projectColection.doc(timeaheadId)\n        setLoading(true)\n        return projectDoc\n            .update({\n                ...data,\n            })\n            .then(() => {\n                setLoading(false)\n                setSuccessMess('Se guardó correctamente')\n                const timer = setTimeout(() => {\n                    setSuccessMess('')\n                }, [3000])\n                return () => clearInterval(timer)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const value = { timeAheadWeb, timeAheadRedes, timeAheaDisenio, changeTimeAhead, loading, successMess }\n\n    return <Provider value={value}>{children}</Provider>\n}\n"],"sourceRoot":""}